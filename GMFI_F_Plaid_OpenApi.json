{
    "openapi": "3.1.0",
    "info": {
      "title": "The Plaid API",
      "description": "The Plaid REST API. Please see https://plaid.com/docs/api for more details.",
      "contact": {
        "name": "Plaid Developer Team",
        "url": "https://plaid.com"
      },
      "version": "1.58.1"
    },
    "jsonSchemaDialect": "https://json-schema.org/draft/2020-12/schema",
    "servers": [
      {
        "url": "https://production.plaid.com",
        "description": "Production",
        "variables": {}
      },
      {
        "url": "https://development.plaid.com",
        "description": "Development",
        "variables": {}
      },
      {
        "url": "https://sandbox.plaid.com",
        "description": "Sandbox",
        "variables": {}
      }
    ],
    "paths": {
      "/link/token/create": {
        "post": {
          "tags": [
            "plaid",
            "token"
          ],
          "summary": "linkTokenCreate",
          "description": "The `/link/token/create` endpoint creates a `link_token`, which is required as a parameter when initializing Link. Once Link has been initialized, it returns a `public_token`, which can then be exchanged for an `access_token` via `/item/public_token/exchange` as part of the main Link flow.\n\nA `link_token` generated by `/link/token/create` is also used to initialize other Link flows, such as the update mode flow for tokens with expired credentials, or the Payment Initiation (Europe) flow.",
          "externalDocs": {
            "url": "/api/tokens/#linktokencreate"
          },
          "operationId": "linkTokenCreate",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkTokenCreateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LinkTokenCreateResponse"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/link/token/get": {
        "post": {
          "tags": [
            "plaid",
            "token"
          ],
          "summary": "linkTokenGet",
          "description": "The `/link/token/get` endpoint gets information about a previously-created `link_token` using the\n`/link/token/create` endpoint. It can be useful for debugging purposes.",
          "externalDocs": {
            "url": "/api/tokens/#linktokenget"
          },
          "operationId": "linkTokenGet",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkTokenGetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LinkTokenGetResponse"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/item/public_token/exchange": {
        "post": {
          "tags": [
            "plaid",
            "item"
          ],
          "summary": "itemPublicTokenExchange",
          "description": "Exchange a Link `public_token` for an API `access_token`. Link hands off the `public_token` client-side via the `onSuccess` callback once a user has successfully created an Item. The `public_token` is ephemeral and expires after 30 minutes.\n\nThe response also includes an `item_id` that should be stored with the `access_token`. The `item_id` is used to identify an Item in a webhook. The `item_id` can also be retrieved by making an `/item/get` request.",
          "externalDocs": {
            "url": "/api/tokens/#itempublic_tokenexchange"
          },
          "operationId": "itemPublicTokenExchange",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemPublicTokenExchangeRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemPublicTokenExchangeResponse"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/item/import": {
        "post": {
          "tags": [
            "plaid",
            "item"
          ],
          "summary": "itemImport",
          "description": "`/item/import` creates an Item via your Plaid Exchange Integration and returns an `access_token`. As part of an `/item/import` request, you will include a User ID (`user_auth.user_id`) and Authentication Token (`user_auth.auth_token`) that enable data aggregation through your Plaid Exchange API endpoints. These authentication principals are to be chosen by you.\n\nUpon creating an Item via `/item/import`, Plaid will automatically begin an extraction of that Item through the Plaid Exchange infrastructure you have already integrated. This will automatically generate the Plaid native account ID for the account the user will switch their direct deposit to (`target_account_id`).",
          "operationId": "itemImport",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemImportRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemImportResponse"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/item/get": {
        "post": {
          "tags": [
            "plaid",
            "item"
          ],
          "summary": "itemGet",
          "description": "Returns information about the status of an Item.",
          "externalDocs": {
            "url": "/api/items/#itemget"
          },
          "operationId": "itemGet",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemGetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "success",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemGetResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Error response.",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/item/access_token/invalidate": {
        "post": {
          "tags": [
            "plaid",
            "item"
          ],
          "summary": "itemAccessTokenInvalidate",
          "description": "By default, the `access_token` associated with an Item does not expire and should be stored in a persistent, secure manner.\n\nYou can use the `/item/access_token/invalidate` endpoint to rotate the `access_token` associated with an Item. The endpoint returns a new `access_token` and immediately invalidates the previous `access_token`.\n",
          "externalDocs": {
            "url": "/api/tokens/#itemaccess_tokeninvalidate"
          },
          "operationId": "itemAccessTokenInvalidate",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemAccessTokenInvalidateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemAccessTokenInvalidateResponse"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/item/remove": {
        "post": {
          "tags": [
            "plaid",
            "item"
          ],
          "summary": "itemRemove",
          "description": "The `/item/remove`  endpoint allows you to remove an Item. Once removed, the `access_token`  associated with the Item is no longer valid and cannot be used to access any data that was associated with the Item.",
          "externalDocs": {
            "url": "/api/items/#itemremove"
          },
          "operationId": "itemRemove",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemRemoveRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "success",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemRemoveResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Error response.",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/item/application/scopes/update": {
        "post": {
          "tags": [
            "plaid",
            "item"
          ],
          "summary": "itemApplicationScopesUpdate",
          "description": "Enable consumers to update product access on selected accounts for an application.",
          "operationId": "itemApplicationScopesUpdate",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemApplicationScopesUpdateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "success",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemApplicationScopesUpdateResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Error response.",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/item/application/list": {
        "post": {
          "tags": [
            "plaid",
            "item"
          ],
          "summary": "itemApplicationList",
          "description": "List a user’s connected applications",
          "operationId": "itemApplicationList",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemApplicationListRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ItemApplicationListResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Error response.",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/processor/auth/get": {
        "post": {
          "tags": [
            "plaid",
            "processor"
          ],
          "summary": "processorAuthGet",
          "description": "The `/processor/auth/get` endpoint returns the bank account and bank identification number (such as the routing number, for US accounts), for a checking or savings account that''s associated with a given `processor_token`. The endpoint also returns high-level account data and balances when available. \n",
          "externalDocs": {
            "url": "/api/processors/#processorauthget"
          },
          "operationId": "processorAuthGet",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessorAuthGetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "success",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProcessorAuthGetResponse"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/processor/identity/get": {
        "post": {
          "tags": [
            "plaid",
            "processor"
          ],
          "summary": "processorIdentityGet",
          "description": "The `/processor/identity/get` endpoint allows you to retrieve various account holder information on file with the financial institution, including names, emails, phone numbers, and addresses.",
          "externalDocs": {
            "url": "/api/processors/#processoridentityget"
          },
          "operationId": "processorIdentityGet",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessorIdentityGetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProcessorIdentityGetResponse"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/processor/balance/get": {
        "post": {
          "tags": [
            "plaid",
            "processor"
          ],
          "summary": "processorBalanceGet",
          "description": "The `/processor/balance/get` endpoint returns the real-time balance for each of an Item's accounts. While other endpoints may return a balance object, only `/processor/balance/get` forces the available and current balance fields to be refreshed rather than cached. ",
          "externalDocs": {
            "url": "/api/processors/#processorbalanceget"
          },
          "operationId": "processorBalanceGet",
          "parameters": [],
          "requestBody": {
            "description": "The `/processor/balance/get` endpoint returns the real-time balance for the account associated with a given `processor_token`.\n\nThe current balance is the total amount of funds in the account. The available balance is the current balance less any outstanding holds or debits that have not yet posted to the account.\n\nNote that not all institutions calculate the available balance. In the event that available balance is unavailable from the institution, Plaid will return an available balance value of `null`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessorBalanceGetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProcessorBalanceGetResponse"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/processor/token/create": {
        "post": {
          "tags": [
            "plaid",
            "processor"
          ],
          "summary": "processorTokenCreate",
          "description": "Used to create a token suitable for sending to one of Plaid's partners to enable integrations. Note that Stripe partnerships use bank account tokens instead; see `/processor/stripe/bank_account_token/create` for creating tokens for use with Stripe integrations.",
          "externalDocs": {
            "url": "/api/processors/#processortokencreate"
          },
          "operationId": "processorTokenCreate",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessorTokenCreateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProcessorTokenCreateResponse"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/processor/stripe/bank_account_token/create": {
        "post": {
          "tags": [
            "plaid",
            "processor"
          ],
          "summary": "processorStripeBankAccountTokenCreate",
          "description": "Used to create a token suitable for sending to Stripe to enable Plaid-Stripe integrations. For a detailed guide on integrating Stripe, see [Add Stripe to your app](https://plaid.com/docs/auth/partnerships/stripe/).",
          "externalDocs": {
            "url": "/api/processors/#processorstripebank_account_tokencreate"
          },
          "operationId": "processorStripeBankAccountTokenCreate",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessorStripeBankAccountTokenCreateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProcessorStripeBankAccountTokenCreateResponse"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/accounts/get": {
        "post": {
          "tags": [
            "plaid",
            "accounts"
          ],
          "summary": "accountsGet",
          "description": "The `/accounts/get`  endpoint can be used to retrieve information for any linked Item. Note that some information is nullable. Plaid will only return active bank accounts, i.e. accounts that are not closed and are capable of carrying a balance.\n\nThis endpoint retrieves cached information, rather than extracting fresh information from the institution. As a result, balances returned may not be up-to-date; for realtime balance information, use `/accounts/balance/get` instead.",
          "externalDocs": {
            "url": "/api/accounts/#accountsget"
          },
          "operationId": "accountsGet",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsGetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "success",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AccountsGetResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Error response.",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/accounts/balance/get": {
        "post": {
          "tags": [
            "plaid",
            "accounts"
          ],
          "summary": "accountsBalanceGet",
          "description": "The `/accounts/balance/get` endpoint returns the real-time balance for each of an Item's accounts. While other endpoints may return a balance object, only `/accounts/balance/get` forces the available and current balance fields to be refreshed rather than cached. This endpoint can be used for existing Items that were added via any of Plaid’s other products. This endpoint can be used as long as Link has been initialized with any other product, `balance` itself is not a product that can be used to initialize Link.",
          "externalDocs": {
            "url": "/api/products/#accountsbalanceget"
          },
          "operationId": "accountsBalanceGet",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsBalanceGetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AccountsGetResponse"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/institutions/get_by_id": {
        "post": {
          "tags": [
            "plaid",
            "institutions"
          ],
          "summary": "institutionsGetById",
          "description": "Returns a JSON response containing details on a specified financial institution currently supported by Plaid. \n\nVersioning note: API versions 2019-05-29 and earlier allow use of the `public_key` parameter instead of the `client_id` and `secret` to authenticate to this endpoint. The `public_key` has been deprecated; all customers are encouraged to use `client_id` and `secret` instead.\n",
          "externalDocs": {
            "url": "/api/institutions/#institutionsget_by_id"
          },
          "operationId": "institutionsGetById",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionsGetByIdRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InstitutionsGetByIdResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Error response",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/institutions/get": {
        "post": {
          "tags": [
            "plaid",
            "institutions"
          ],
          "summary": "institutionsGet",
          "description": "Returns a JSON response containing details on all financial institutions currently supported by Plaid. Because Plaid supports thousands of institutions, results are paginated.\n\nIf there is no overlap between an institution’s enabled products and a client’s enabled products, then the institution will be filtered out from the response. As a result, the number of institutions returned may not match the count specified in the call.",
          "externalDocs": {
            "url": "/api/institutions/#institutionsget"
          },
          "operationId": "institutionsGet",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionsGetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InstitutionsGetResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Error response",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/institutions/search": {
        "post": {
          "tags": [
            "plaid",
            "institutions"
          ],
          "summary": "institutionsSearch",
          "description": "Returns a JSON response containing details for institutions that match the query parameters, up to a maximum of ten institutions per query.\n\nVersioning note: API versions 2019-05-29 and earlier allow use of the `public_key` parameter instead of the `client_id` and `secret` parameters to authenticate to this endpoint. The `public_key` parameter has since been deprecated; all customers are encouraged to use `client_id` and `secret` instead.\n",
          "externalDocs": {
            "url": "/api/institutions/#institutionssearch"
          },
          "operationId": "institutionsSearch",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionsSearchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InstitutionsSearchResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Error response",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/auth/get": {
        "post": {
          "tags": [
            "plaid",
            "auth"
          ],
          "summary": "authGet",
          "description": "The `/auth/get` endpoint returns the bank account and bank identification numbers (such as routing numbers, for US accounts) associated with an Item's checking and savings accounts, along with high-level account data and balances when available.\n\nNote: This request may take some time to complete if `auth` was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the data.\n\nAlso note that `/auth/get` will not return data for any new accounts opened after the Item was created. To obtain data for new accounts, create a new Item.\n\nVersioning note: In API version 2017-03-08, the schema of the `numbers` object returned by this endpoint is substantially different. For details, see [Plaid API versioning](https://plaid.com/docs/api/versioning/#version-2018-05-22).",
          "externalDocs": {
            "url": "/api/products/#authget"
          },
          "operationId": "authGet",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthGetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "success",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuthGetResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Default error",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/identity/get": {
        "post": {
          "tags": [
            "plaid",
            "identity"
          ],
          "summary": "identityGet",
          "description": "The `/identity/get` endpoint allows you to retrieve various account holder information on file with the financial institution, including names, emails, phone numbers, and addresses. Only name data is guaranteed to be returned; other fields will be empty arrays if not provided by the institution.\n\nNote: This request may take some time to complete if identity was not specified as an initial product when creating the Item. This is because Plaid must communicate directly with the institution to retrieve the data.",
          "externalDocs": {
            "url": "/api/products/#identityget"
          },
          "operationId": "identityGet",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityGetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IdentityGetResponse"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/transactions/get": {
        "post": {
          "tags": [
            "plaid",
            "transactions"
          ],
          "summary": "transactionsGet",
          "description": "The `/transactions/get` endpoint allows developers to receive user-authorized transaction data for credit, depository, and some loan-type accounts (only those with account subtype `student`; coverage may be limited). For transaction history from investments accounts, use the [Investments endpoint](https://plaid.com/docs/api/products#investments) instead. Transaction data is standardized across financial institutions, and in many cases transactions are linked to a clean name, entity type, location, and category. Similarly, account data is standardized and returned with a clean name, number, balance, and other meta information where available.\n\nTransactions are returned in reverse-chronological order, and the sequence of transaction ordering is stable and will not shift.  Transactions are not immutable and can also be removed altogether by the institution; a removed transaction will no longer appear in `/transactions/get`.  For more details, see [Pending and posted transactions](https://plaid.com/docs/transactions/transactions-data/#pending-and-posted-transactions).\n\nDue to the potentially large number of transactions associated with an Item, results are paginated. Manipulate the `count` and `offset` parameters in conjunction with the `total_transactions` response body field to fetch all available transactions.\n\nData returned by `/transactions/get` will be the data available for the Item as of the most recent successful check for new transactions. Plaid typically checks for new data multiple times a day, but these checks may occur less frequently, such as once a day, depending on the institution. An Item's `status.transactions.last_successful_update` field will show the timestamp of the most recent successful update. To force Plaid to check for new transactions, you can use the `/transactions/refresh` endpoint.\n\nNote that data may not be immediately available to `/transactions/get`. Plaid will begin to prepare transactions data upon Item link, if Link was initialized with `transactions`, or upon the first call to `/transactions/get`, if it wasn't. To be alerted when transaction data is ready to be fetched, listen for the [`INITIAL_UPDATE`](https://plaid.com/docs/api/webhooks#transactions-initial_update) and [`HISTORICAL_UPDATE`](https://plaid.com/docs/api/webhooks#transactions-historical_update) webhooks. If no transaction history is ready when `/transactions/get` is called, it will return a `PRODUCT_NOT_READY` error.",
          "externalDocs": {
            "url": "/api/products/#transactionsget"
          },
          "operationId": "transactionsGet",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsGetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TransactionsGetResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Error response",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/transactions/recurring/get": {
        "post": {
          "tags": [
            "plaid",
            "transactions"
          ],
          "summary": "transactionsRecurringGet",
          "description": "The `/transactions/recurring/get` endpoint identifies and returns groups of transactions that occur on a regular basis for the inputted Item and accounts.\n\nThe product is currently in beta. To request access, contact transactions-feedback@plaid.com.",
          "operationId": "transactionsRecurringGet",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsRecurringGetRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TransactionsRecurringGetResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Error response",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/transactions/sync": {
        "post": {
          "tags": [
            "plaid",
            "transactions"
          ],
          "summary": "transactionsSync",
          "description": "The `/transactions/sync` endpoint returns item transactions as a set of delta updates.\nSubsequent calls to the endpoint using the cursor returned in the response will return new added, modified, and removed transactions since the last call to the endpoint\n\nThe product is currently in beta. To request access, contact transactions-feedback@plaid.com.",
          "externalDocs": {
            "url": "/api/products/#transactionssync"
          },
          "operationId": "transactionsSync",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsSyncRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TransactionsSyncResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Error response",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/transactions/refresh": {
        "post": {
          "tags": [
            "plaid",
            "transactions"
          ],
          "summary": "transactionsRefresh",
          "description": "`/transactions/refresh` is an optional endpoint for users of the Transactions product. It initiates an on-demand extraction to fetch the newest transactions for an Item. This on-demand extraction takes place in addition to the periodic extractions that automatically occur multiple times a day for any Transactions-enabled Item. If changes to transactions are discovered after calling `/transactions/refresh`, Plaid will fire a webhook: [`TRANSACTIONS_REMOVED`](https://plaid.com/docs/api/webhooks#deleted-transactions-detected) will be fired if any removed transactions are detected, and [`DEFAULT_UPDATE`](https://plaid.com/docs/api/webhooks#transactions-default_update) will be fired if any new transactions are detected. New transactions can be fetched by calling `/transactions/get`.\n\nAccess to `/transactions/refresh` in Production is specific to certain pricing plans. If you cannot access `/transactions/refresh` in Production, [contact Sales](https://www.plaid.com/contact) for assistance.",
          "externalDocs": {
            "url": "/api/products/#transactionsrefresh"
          },
          "operationId": "transactionsRefresh",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsRefreshRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TransactionsRefreshResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Error response",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/categories/get": {
        "post": {
          "tags": [
            "plaid",
            "categories"
          ],
          "summary": "categoriesGet",
          "description": "Send a request to the `/categories/get` endpoint to get detailed information on categories returned by Plaid. This endpoint does not require authentication.",
          "externalDocs": {
            "url": "/api/products/#categoriesget"
          },
          "operationId": "categoriesGet",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "contentMediaType": "application/json"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "success",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CategoriesGetResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Error response.",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "security": []
        },
        "parameters": []
      },
      "/signal/evaluate": {
        "post": {
          "tags": [
            "plaid",
            "signal"
          ],
          "summary": "signalEvaluate",
          "description": "Use `/signal/evaluate` to evaluate a planned ACH transaction to get a return risk assessment (such as a risk score and risk tier) and additional risk signals.\n\nIn order to obtain a valid score for an ACH transaction, Plaid must have an access token for the account, and the Item must be healthy (receiving product updates) or have recently been in a healthy state. If the transaction does not meet eligibility requirements, an error will be returned corresponding to the underlying cause. If `/signal/evaluate` is called on the same transaction multiple times within a 24-hour period, cached results may be returned.",
          "externalDocs": {
            "url": "/signal/reference#signalevaluate"
          },
          "operationId": "signalEvaluate",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalEvaluateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SignalEvaluateResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Error response.",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/signal/decision/report": {
        "post": {
          "tags": [
            "plaid",
            "signal"
          ],
          "summary": "signalDecisionReport",
          "description": "After calling `/signal/evaluate`, call `/signal/decision/report` to report whether the transaction was initiated. This endpoint will return an `INVALID_REQUEST` error if called a second time with a different value for `initiated`.",
          "externalDocs": {
            "url": "/signal/reference#signaldecisionreport"
          },
          "operationId": "signalDecisionReport",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalDecisionReportRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SignalDecisionReportResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Error response.",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      },
      "/signal/return/report": {
        "post": {
          "tags": [
            "plaid",
            "signal"
          ],
          "summary": "signalReturnReport",
          "description": "Call the `/signal/return/report` endpoint to report a returned transaction that was previously sent to the `/signal/evaluate` endpoint. Your feedback will be used by the model to incorporate the latest risk trend in your portfolio.",
          "externalDocs": {
            "url": "/signal/reference#signalreturnreport"
          },
          "operationId": "signalReturnReport",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalReturnReportRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SignalReturnReportResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Error response.",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "deprecated": false
        },
        "parameters": []
      }
    },
    "components": {
      "schemas": {
        "ItemGetRequest": {
          "title": "ItemGetRequest",
          "required": [
            "access_token"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            }
          },
          "description": "ItemGetRequest defines the request schema for `/item/get`"
        },
        "ItemGetResponse": {
          "title": "ItemGetResponse",
          "required": [
            "item",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "item": {
              "$ref": "#/components/schemas/Item"
            },
            "status": {
              "$ref": "#/components/schemas/ItemStatusNullable"
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "ItemGetResponse defines the response schema for `/item/get` and `/item/webhook/update`"
        },
        "AuthGetRequest": {
          "title": "AuthGetRequest",
          "required": [
            "access_token"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            },
            "options": {
              "$ref": "#/components/schemas/AuthGetRequestOptions"
            }
          },
          "description": "AuthGetRequest defines the request schema for `/auth/get`"
        },
        "AuthGetRequestOptions": {
          "title": "AuthGetRequestOptions",
          "type": "object",
          "properties": {
            "account_ids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of `account_ids` to retrieve for the Item.\nNote: An error will be returned if a provided `account_id` is not associated with the Item."
            }
          },
          "description": "An optional object to filter `/auth/get` results."
        },
        "AuthGetResponse": {
          "title": "AuthGetResponse",
          "required": [
            "accounts",
            "numbers",
            "item",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "accounts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Account"
              },
              "description": "The `accounts` for which numbers are being retrieved."
            },
            "numbers": {
              "$ref": "#/components/schemas/AuthGetNumbers"
            },
            "item": {
              "$ref": "#/components/schemas/Item"
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "AuthGetResponse defines the response schema for `/auth/get`"
        },
        "AuthGetNumbers": {
          "title": "AuthGetNumbers",
          "required": [
            "ach"
          ],
          "type": "object",
          "properties": {
            "ach": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/NumbersACH"
              },
              "description": "An array of ACH numbers identifying accounts."
            }
          },
          "description": "An object containing identifying numbers used for making electronic transfers to and from the `accounts`. The identifying number type (ACH, EFT, IBAN, or BACS) used will depend on the country of the account. An account may have more than one number type. If a particular identifying number type is not used by any `accounts` for which data has been requested, the array for that type will be empty."
        },
        "TransactionsGetRequest": {
          "title": "TransactionsGetRequest",
          "required": [
            "access_token",
            "start_date",
            "end_date"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "options": {
              "$ref": "#/components/schemas/TransactionsGetRequestOptions"
            },
            "access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "start_date": {
              "type": "string",
              "description": "The earliest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.",
              "contentEncoding": "date"
            },
            "end_date": {
              "type": "string",
              "description": "The latest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.",
              "contentEncoding": "date"
            }
          },
          "description": "TransactionsGetRequest defines the request schema for `/transactions/get`"
        },
        "TransactionsGetRequestOptions": {
          "title": "TransactionsGetRequestOptions",
          "type": "object",
          "properties": {
            "account_ids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of `account_ids` to retrieve for the Item\n\nNote: An error will be returned if a provided `account_id` is not associated with the Item."
            },
            "count": {
              "maximum": 500.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "The number of transactions to fetch.",
              "contentEncoding": "int32",
              "default": 100
            },
            "offset": {
              "minimum": 0.0,
              "type": "integer",
              "description": "The number of transactions to skip. The default value is 0.",
              "contentEncoding": "int32",
              "default": 0
            },
            "include_original_description": {
              "type": [
                "boolean",
                "null"
              ],
              "description": "Include the raw unparsed transaction description from the financial institution. This field is disabled by default. If you need this information in addition to the parsed data provided, contact your Plaid Account Manager.",
              "default": false
            },
            "include_personal_finance_category_beta": {
              "type": "boolean",
              "description": "Include the `personal_finance_category` object in the response. This feature is currently in beta – to request access, contact transactions-feedback@plaid.com.",
              "default": false
            }
          },
          "description": "An optional object to be used with the request. If specified, `options` must not be `null`."
        },
        "TransactionsGetResponse": {
          "title": "TransactionsGetResponse",
          "required": [
            "accounts",
            "transactions",
            "total_transactions",
            "item",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "accounts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Account"
              },
              "description": "An array containing the `accounts` associated with the Item for which transactions are being returned. Each transaction can be mapped to its corresponding account via the `account_id` field."
            },
            "transactions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Transaction"
              },
              "description": "An array containing transactions from the account. Transactions are returned in reverse chronological order, with the most recent at the beginning of the array. The maximum number of transactions returned is determined by the `count` parameter."
            },
            "total_transactions": {
              "type": "integer",
              "description": "The total number of transactions available within the date range specified. If `total_transactions` is larger than the size of the `transactions` array, more transactions are available and can be fetched via manipulating the `offset` parameter.",
              "contentEncoding": "int32"
            },
            "item": {
              "$ref": "#/components/schemas/Item"
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "TransactionsGetResponse defines the response schema for `/transactions/get`"
        },
        "TransactionsRefreshRequest": {
          "title": "TransactionsRefreshRequest",
          "required": [
            "access_token"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            }
          },
          "description": "TransactionsRefreshRequest defines the request schema for `/transactions/refresh`"
        },
        "TransactionsRefreshResponse": {
          "title": "TransactionsRefreshResponse",
          "required": [
            "request_id"
          ],
          "type": "object",
          "properties": {
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "TransactionsRefreshResponse defines the response schema for `/transactions/refresh`"
        },
        "TransactionsRecurringGetRequest": {
          "title": "TransactionsRecurringGetRequest",
          "required": [
            "access_token",
            "account_ids"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "account_ids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of `account_ids` to retrieve for the Item\n\nNote: An error will be returned if a provided `account_id` is not associated with the Item."
            }
          },
          "description": "TransactionsRecurringGetRequest defines the request schema for `/transactions/recurring/get`"
        },
        "TransactionsRecurringGetResponse": {
          "title": "TransactionsRecurringGetResponse",
          "required": [
            "inflow_streams",
            "outflow_streams",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "inflow_streams": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TransactionStream"
              },
              "description": "An array of depository transaction streams."
            },
            "outflow_streams": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TransactionStream"
              },
              "description": "An array of expense transaction streams."
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "TransactionsRecurringGetResponse defines the response schema for `/transactions/recurring/get`"
        },
        "TransactionsSyncRequest": {
          "title": "TransactionsSyncRequest",
          "required": [
            "access_token"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "cursor": {
              "type": "string",
              "description": "The cursor value represents the last update requested. Providing it will cause the response to only return changes after this update.\nIf omitted, the entire history of updates will be returned, starting with the first-added transactions on the item.\nNote: The upper-bound length of this cursor is 256 characters of base64."
            },
            "count": {
              "maximum": 500.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "The number of transaction updates to fetch.",
              "contentEncoding": "int32",
              "default": 100
            }
          },
          "description": "TransactionsSyncRequest defines the request schema for `/transactions/sync`"
        },
        "TransactionsSyncResponse": {
          "title": "TransactionsSyncResponse",
          "required": [
            "added",
            "modified",
            "removed",
            "next_cursor",
            "has_more",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "added": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Transaction"
              },
              "description": "Transactions that have been added to the item since `cursor` ordered by ascending last modified time."
            },
            "modified": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Transaction"
              },
              "description": "Transactions that have been modified on the item since `cursor` ordered by ascending last modified time."
            },
            "removed": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemovedTransaction"
              },
              "description": "Transactions that have been removed from the item since `cursor` ordered by ascending last modified time."
            },
            "next_cursor": {
              "type": "string",
              "description": "Cursor used for fetching any future updates after the latest update provided in this response."
            },
            "has_more": {
              "type": "boolean",
              "description": "Represents if more than requested count of transaction updates exist. If true, the additional updates can be fetched by making an additional request with `cursor` set to `next_cursor`."
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "TransactionsSyncResponse defines the response schema for `/transactions/sync`"
        },
        "InstitutionsGetRequest": {
          "title": "InstitutionsGetRequest",
          "required": [
            "count",
            "offset",
            "country_codes"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "count": {
              "maximum": 500.0,
              "type": "integer",
              "description": "The total number of Institutions to return.",
              "contentEncoding": "int32"
            },
            "offset": {
              "type": "integer",
              "description": "The number of Institutions to skip.",
              "contentEncoding": "int32"
            },
            "country_codes": {
              "minItems": 1,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CountryCode"
              },
              "description": "Specify an array of Plaid-supported country codes this institution supports, using the ISO-3166-1 alpha-2 country code standard. \n\nIn API versions 2019-05-29 and earlier, the `country_codes` parameter is an optional parameter within the `options` object and will default to `[US]` if it is not supplied."
            },
            "options": {
              "$ref": "#/components/schemas/InstitutionsGetRequestOptions"
            }
          },
          "description": "InstitutionsGetRequest defines the request schema for `/institutions/get`"
        },
        "InstitutionsGetRequestOptions": {
          "title": "InstitutionsGetRequestOptions",
          "type": "object",
          "properties": {
            "products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Products"
              },
              "description": "Filter the Institutions based on which products they support."
            },
            "routing_numbers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Specify an array of routing numbers to filter institutions. The response will only return institutions that match all of the routing numbers in the array. Routing number records used for this matching are not comprehensive; failure to match a given routing number to an institution does not mean that the institution is unsupported by Plaid."
            },
            "oauth": {
              "type": "boolean",
              "description": "Limit results to institutions with or without OAuth login flows. This is primarily relevant to institutions with European country codes."
            },
            "include_optional_metadata": {
              "type": "boolean",
              "description": "When `true`, return the institution's homepage URL, logo and primary brand color.\n\nNote that Plaid does not own any of the logos shared by the API, and that by accessing or using these logos, you agree that you are doing so at your own risk and will, if necessary, obtain all required permissions from the appropriate rights holders and adhere to any applicable usage guidelines. Plaid disclaims all express or implied warranties with respect to the logos."
            },
            "include_auth_metadata": {
              "type": "boolean",
              "description": "When `true`, returns metadata related to the Auth product indicating which auth methods are supported.",
              "default": false
            },
            "include_payment_initiation_metadata": {
              "type": "boolean",
              "description": "When `true`, returns metadata related to the Payment Initiation product indicating which payment configurations are supported.",
              "default": false
            }
          },
          "description": "An optional object to filter `/institutions/get` results."
        },
        "InstitutionsGetResponse": {
          "title": "InstitutionsGetResponse",
          "required": [
            "institutions",
            "total",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "institutions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Institution"
              },
              "description": "A list of Plaid Institution"
            },
            "total": {
              "type": "integer",
              "description": "The total number of institutions available via this endpoint",
              "contentEncoding": "int32"
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "InstitutionsGetResponse defines the response schema for `/institutions/get`"
        },
        "InstitutionsSearchRequest": {
          "title": "InstitutionsSearchRequest",
          "required": [
            "query",
            "products",
            "country_codes"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "query": {
              "type": "string",
              "description": "The search query. Institutions with names matching the query are returned"
            },
            "products": {
              "minItems": 1,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Products"
              },
              "description": "Filter the Institutions based on whether they support all products listed in `products`. Provide `null` to get institutions regardless of supported products. Note that when `auth` is specified as a product, if you are enabled for Instant Match or Automated Micro-deposits, institutions that support those products will be returned even if `auth` is not present in their product array."
            },
            "country_codes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CountryCode"
              },
              "description": "Specify an array of Plaid-supported country codes this institution supports, using the ISO-3166-1 alpha-2 country code standard. In API versions 2019-05-29 and earlier, the `country_codes` parameter is an optional parameter within the `options` object and will default to `[US]` if it is not supplied."
            },
            "options": {
              "$ref": "#/components/schemas/InstitutionsSearchRequestOptions"
            }
          },
          "description": "InstitutionsSearchRequest defines the request schema for `/institutions/search`"
        },
        "InstitutionsSearchRequestOptions": {
          "title": "InstitutionsSearchRequestOptions",
          "type": "object",
          "properties": {
            "oauth": {
              "type": "boolean",
              "description": "Limit results to institutions with or without OAuth login flows. This is primarily relevant to institutions with European country codes"
            },
            "include_optional_metadata": {
              "type": "boolean",
              "description": "When true, return the institution's homepage URL, logo and primary brand color."
            },
            "include_auth_metadata": {
              "type": "boolean",
              "description": "When `true`, returns metadata related to the Auth product indicating which auth methods are supported.",
              "default": false
            },
            "include_payment_initiation_metadata": {
              "type": "boolean",
              "description": "When `true`, returns metadata related to the Payment Initiation product indicating which payment configurations are supported.",
              "default": false
            },
            "payment_initiation": {
              "$ref": "#/components/schemas/InstitutionsSearchPaymentInitiationOptions"
            }
          },
          "description": "An optional object to filter `/institutions/search` results."
        },
        "InstitutionsSearchPaymentInitiationOptions": {
          "title": "InstitutionsSearchPaymentInitiationOptions",
          "type": "object",
          "properties": {
            "payment_id": {
              "type": "string",
              "description": "A unique ID identifying the payment"
            }
          },
          "description": "Additional options that will be used to filter institutions by various Payment Initiation configurations."
        },
        "InstitutionsSearchResponse": {
          "title": "InstitutionsSearchResponse",
          "required": [
            "institutions",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "institutions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Institution"
              },
              "description": "An array of institutions matching the search criteria"
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "InstitutionsSearchResponse defines the response schema for `/institutions/search`"
        },
        "InstitutionsGetByIdRequest": {
          "title": "InstitutionsGetByIdRequest",
          "required": [
            "institution_id",
            "country_codes"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "institution_id": {
              "type": "string",
              "description": "The ID of the institution to get details about"
            },
            "country_codes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CountryCode"
              },
              "description": "Specify an array of Plaid-supported country codes this institution supports, using the ISO-3166-1 alpha-2 country code standard. In API versions 2019-05-29 and earlier, the `country_codes` parameter is an optional parameter within the `options` object and will default to `[US]` if it is not supplied."
            },
            "options": {
              "$ref": "#/components/schemas/InstitutionsGetByIdRequestOptions"
            }
          },
          "description": "InstitutionsGetByIdRequest defines the request schema for `/institutions/get_by_id`"
        },
        "InstitutionsGetByIdRequestOptions": {
          "title": "InstitutionsGetByIdRequestOptions",
          "type": "object",
          "properties": {
            "include_optional_metadata": {
              "type": "boolean",
              "description": "When `true`, return an institution's logo, brand color, and URL. When available, the bank's logo is returned as a base64 encoded 152x152 PNG, the brand color is in hexadecimal format. The default value is `false`.\n\nNote that Plaid does not own any of the logos shared by the API and that by accessing or using these logos, you agree that you are doing so at your own risk and will, if necessary, obtain all required permissions from the appropriate rights holders and adhere to any applicable usage guidelines. Plaid disclaims all express or implied warranties with respect to the logos.",
              "default": false
            },
            "include_status": {
              "type": "boolean",
              "description": "If `true`, the response will include status information about the institution. Default value is `false`.",
              "default": false
            },
            "include_auth_metadata": {
              "type": "boolean",
              "description": "When `true`, returns metadata related to the Auth product indicating which auth methods are supported.",
              "default": false
            },
            "include_payment_initiation_metadata": {
              "type": "boolean",
              "description": "When `true`, returns metadata related to the Payment Initiation product indicating which payment configurations are supported.",
              "default": false
            }
          },
          "description": "Specifies optional parameters for `/institutions/get_by_id`. If provided, must not be `null`."
        },
        "InstitutionsGetByIdResponse": {
          "title": "InstitutionsGetByIdResponse",
          "required": [
            "institution",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "institution": {
              "$ref": "#/components/schemas/Institution"
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "InstitutionsGetByIdResponse defines the response schema for `/institutions/get_by_id`"
        },
        "ItemRemoveRequest": {
          "title": "ItemRemoveRequest",
          "required": [
            "access_token"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            }
          },
          "description": "ItemRemoveRequest defines the request schema for `/item/remove`"
        },
        "ItemRemoveResponse": {
          "title": "ItemRemoveResponse",
          "required": [
            "request_id"
          ],
          "type": "object",
          "properties": {
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "ItemRemoveResponse defines the response schema for `/item/remove`"
        },
        "AccountsGetRequest": {
          "title": "AccountsGetRequest",
          "required": [
            "access_token"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            },
            "options": {
              "$ref": "#/components/schemas/AccountsGetRequestOptions"
            }
          },
          "description": "AccountsGetRequest defines the request schema for `/accounts/get`"
        },
        "AccountsGetRequestOptions": {
          "title": "AccountsGetRequestOptions",
          "type": "object",
          "properties": {
            "account_ids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "An array of `account_ids` to retrieve for the Account."
            }
          },
          "description": "An optional object to filter `/accounts/get` results."
        },
        "AccountsGetResponse": {
          "title": "AccountsGetResponse",
          "required": [
            "accounts",
            "item",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "accounts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Account"
              },
              "description": "An array of financial institution accounts associated with the Item.\nIf `/accounts/balance/get` was called, each account will include real-time balance information."
            },
            "item": {
              "$ref": "#/components/schemas/Item"
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "AccountsGetResponse defines the response schema for `/accounts/get` and `/accounts/balance/get`."
        },
        "CategoriesGetResponse": {
          "title": "CategoriesGetResponse",
          "required": [
            "categories",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "categories": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Category"
              },
              "description": "An array of all of the transaction categories used by Plaid."
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "CategoriesGetResponse defines the response schema for `/categories/get`"
        },
        "AccountsBalanceGetRequest": {
          "title": "AccountsBalanceGetRequest",
          "required": [
            "access_token"
          ],
          "type": "object",
          "properties": {
            "access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "options": {
              "$ref": "#/components/schemas/AccountsBalanceGetRequestOptions"
            }
          },
          "description": "AccountsBalanceGetRequest defines the request schema for `/accounts/balance/get`"
        },
        "AccountsBalanceGetRequestOptions": {
          "title": "AccountsBalanceGetRequestOptions",
          "type": "object",
          "properties": {
            "account_ids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of `account_ids` to retrieve for the Item. The default value is `null`.\n\nNote: An error will be returned if a provided `account_id` is not associated with the Item."
            },
            "min_last_updated_datetime": {
              "type": "string",
              "description": "Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the oldest acceptable balance when making a request to `/accounts/balance/get`.\n\nIf the balance that is pulled for `ins_128026` (Capital One) is older than the given timestamp, an `INVALID_REQUEST` error with the code of `LAST_UPDATED_DATETIME_OUT_OF_RANGE` will be returned with the most recent timestamp for the requested account contained in the response.\n\nThis field is only used when the institution is `ins_128026` (Capital One), in which case a value must be provided or an `INVALID_REQUEST` error with the code of `INVALID_FIELD` will be returned. For all other institutions, this field is ignored.",
              "contentEncoding": "date-time"
            }
          },
          "description": "An optional object to filter `/accounts/balance/get` results."
        },
        "IdentityGetRequest": {
          "title": "IdentityGetRequest",
          "required": [
            "access_token"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            },
            "options": {
              "$ref": "#/components/schemas/IdentityGetRequestOptions"
            }
          },
          "description": "IdentityGetRequest defines the request schema for `/identity/get`"
        },
        "IdentityGetRequestOptions": {
          "title": "IdentityGetRequestOptions",
          "type": "object",
          "properties": {
            "account_ids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of `account_ids` to retrieve for the Item.\nNote: An error will be returned if a provided `account_id` is not associated with the Item."
            }
          },
          "description": "An optional object to filter `/identity/get` results."
        },
        "IdentityGetResponse": {
          "title": "IdentityGetResponse",
          "required": [
            "accounts",
            "item",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "accounts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccountIdentity"
              },
              "description": "The accounts for which Identity data has been requested"
            },
            "item": {
              "$ref": "#/components/schemas/Item"
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "IdentityGetResponse defines the response schema for `/identity/get`"
        },
        "ProcessorAuthGetRequest": {
          "title": "ProcessorAuthGetRequest",
          "required": [
            "processor_token"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "processor_token": {
              "type": "string",
              "description": "The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`"
            }
          },
          "description": "ProcessorAuthGetRequest defines the request schema for `/processor/auth/get`"
        },
        "ProcessorAuthGetResponse": {
          "title": "ProcessorAuthGetResponse",
          "required": [
            "request_id",
            "numbers",
            "account"
          ],
          "type": "object",
          "properties": {
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            },
            "numbers": {
              "$ref": "#/components/schemas/ProcessorNumber"
            },
            "account": {
              "$ref": "#/components/schemas/Account"
            }
          },
          "description": "ProcessorAuthGetResponse defines the response schema for `/processor/auth/get`"
        },
        "ProcessorNumber": {
          "title": "ProcessorNumber",
          "type": "object",
          "properties": {
            "ach": {
              "$ref": "#/components/schemas/NumbersACHNullable"
            }
          },
          "description": "An object containing identifying numbers used for making electronic transfers to and from the `account`. The identifying number type (ACH, EFT, IBAN, or BACS) used will depend on the country of the account. An account may have more than one number type. If a particular identifying number type is not used by the `account` for which auth data has been requested, a null value will be returned."
        },
        "ProcessorIdentityGetRequest": {
          "title": "ProcessorIdentityGetRequest",
          "required": [
            "processor_token"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "processor_token": {
              "type": "string",
              "description": "The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`"
            }
          },
          "description": "ProcessorIdentityGetRequest defines the request schema for `/processor/identity/get`"
        },
        "ProcessorIdentityGetResponse": {
          "title": "ProcessorIdentityGetResponse",
          "required": [
            "account",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "account": {
              "$ref": "#/components/schemas/AccountIdentity"
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "ProcessorIdentityGetResponse defines the response schema for `/processor/identity/get`"
        },
        "ProcessorBalanceGetRequest": {
          "title": "ProcessorBalanceGetRequest",
          "required": [
            "processor_token"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "processor_token": {
              "type": "string",
              "description": "The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`"
            },
            "options": {
              "$ref": "#/components/schemas/ProcessorBalanceGetRequestOptions"
            }
          },
          "description": "ProcessorBalanceGetRequest defines the request schema for `/processor/balance/get`"
        },
        "ProcessorBalanceGetRequestOptions": {
          "title": "ProcessorBalanceGetRequestOptions",
          "type": "object",
          "properties": {
            "min_last_updated_datetime": {
              "type": "string",
              "description": "Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the oldest acceptable balance when making a request to `/accounts/balance/get`.\n\nIf the balance that is pulled for `ins_128026` (Capital One) is older than the given timestamp, an `INVALID_REQUEST` error with the code of `LAST_UPDATED_DATETIME_OUT_OF_RANGE` will be returned with the most recent timestamp for the requested account contained in the response.\n\nThis field is only used when the institution is `ins_128026` (Capital One), in which case a value must be provided or an `INVALID_REQUEST` error with the code of `INVALID_FIELD` will be returned. For all other institutions, this field is ignored.",
              "contentEncoding": "date-time"
            }
          },
          "description": "An optional object to filter `/processor/balance/get` results."
        },
        "ProcessorBalanceGetResponse": {
          "title": "ProcessorBalanceGetResponse",
          "required": [
            "account",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "account": {
              "$ref": "#/components/schemas/Account"
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "ProcessorBalanceGetResponse defines the response schema for `/processor/balance/get`"
        },
        "ItemAccessTokenInvalidateRequest": {
          "title": "ItemAccessTokenInvalidateRequest",
          "required": [
            "access_token"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            }
          },
          "description": "ItemAccessTokenInvalidateRequest defines the request schema for `/item/access_token/invalidate`"
        },
        "ItemAccessTokenInvalidateResponse": {
          "title": "ItemAccessTokenInvalidateResponse",
          "required": [
            "new_access_token",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "new_access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "ItemAccessTokenInvalidateResponse defines the response schema for `/item/access_token/invalidate`"
        },
        "ItemPublicTokenExchangeRequest": {
          "title": "ItemPublicTokenExchangeRequest",
          "required": [
            "public_token"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "public_token": {
              "type": "string",
              "description": "Your `public_token`, obtained from the Link `onSuccess` callback or `/sandbox/item/public_token/create`."
            }
          },
          "description": "ItemPublicTokenExchangeRequest defines the request schema for `/item/public_token/exchange`"
        },
        "ItemPublicTokenExchangeResponse": {
          "title": "ItemPublicTokenExchangeResponse",
          "required": [
            "access_token",
            "item_id",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            },
            "item_id": {
              "type": "string",
              "description": "The `item_id` value of the Item associated with the returned `access_token`"
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "ItemPublicTokenExchangeResponse defines the response schema for `/item/public_token/exchange`"
        },
        "ProcessorTokenCreateRequest": {
          "title": "ProcessorTokenCreateRequest",
          "required": [
            "access_token",
            "account_id",
            "processor"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            },
            "account_id": {
              "type": "string",
              "description": "The `account_id` value obtained from the `onSuccess` callback in Link"
            },
            "processor": {
              "$ref": "#/components/schemas/Processor"
            }
          },
          "description": "ProcessorTokenCreateRequest defines the request schema for `/processor/token/create`"
        },
        "ProcessorTokenCreateResponse": {
          "title": "ProcessorTokenCreateResponse",
          "required": [
            "processor_token",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "processor_token": {
              "type": "string",
              "description": "The `processor_token` that can then be used by the Plaid partner to make API requests"
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "ProcessorTokenCreateResponse defines the response schema for `/processor/token/create` and `/processor/apex/processor_token/create`"
        },
        "ProcessorStripeBankAccountTokenCreateRequest": {
          "title": "ProcessorStripeBankAccountTokenCreateRequest",
          "required": [
            "access_token",
            "account_id"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            },
            "account_id": {
              "type": "string",
              "description": "The `account_id` value obtained from the `onSuccess` callback in Link"
            }
          },
          "description": "ProcessorStripeBankAccountTokenCreateRequest defines the request schema for `/processor/stripe/bank_account/create`"
        },
        "ProcessorStripeBankAccountTokenCreateResponse": {
          "title": "ProcessorStripeBankAccountTokenCreateResponse",
          "required": [
            "stripe_bank_account_token",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "stripe_bank_account_token": {
              "type": "string",
              "description": "A token that can be sent to Stripe for use in making API calls to Plaid"
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "ProcessorStripeBankAccountTokenCreateResponse defines the response schema for `/processor/stripe/bank_account/create`"
        },
        "ItemImportRequest": {
          "title": "ItemImportRequest",
          "required": [
            "products",
            "user_auth"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "products": {
              "minItems": 1,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Products"
              },
              "description": "Array of product strings"
            },
            "user_auth": {
              "$ref": "#/components/schemas/ItemImportRequestUserAuth"
            },
            "options": {
              "$ref": "#/components/schemas/ItemImportRequestOptions"
            }
          },
          "description": "ItemImportRequest defines the request schema for `/item/import`"
        },
        "ItemImportRequestOptions": {
          "title": "ItemImportRequestOptions",
          "type": "object",
          "properties": {
            "webhook": {
              "type": "string",
              "description": "Specifies a webhook URL to associate with an Item. Plaid fires a webhook if credentials fail."
            }
          },
          "description": "An optional object to configure `/item/import` request."
        },
        "ItemImportRequestUserAuth": {
          "title": "ItemImportRequestUserAuth",
          "required": [
            "user_id",
            "auth_token"
          ],
          "type": "object",
          "properties": {
            "user_id": {
              "type": "string",
              "description": "Opaque user identifier"
            },
            "auth_token": {
              "type": "string",
              "description": "Authorization token Plaid will use to aggregate this user’s accounts"
            }
          },
          "description": "Object of user ID and auth token pair, permitting Plaid to aggregate a user’s accounts"
        },
        "ItemImportResponse": {
          "title": "ItemImportResponse",
          "required": [
            "access_token",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "ItemImportResponse defines the response schema for `/item/import`"
        },
        "LinkTokenGetRequest": {
          "title": "LinkTokenGetRequest",
          "required": [
            "link_token"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "link_token": {
              "type": "string",
              "description": "A `link_token` from a previous invocation of `/link/token/create`"
            }
          },
          "description": "LinkTokenGetRequest defines the request schema for `/link/token/get`"
        },
        "LinkTokenCreateRequest": {
          "title": "LinkTokenCreateRequest",
          "required": [
            "client_name",
            "language",
            "country_codes",
            "user"
          ],
          "type": "object",
          "properties": {
            "client_name": {
              "type": "string",
              "description": "CONSTANT The name of your application, as it should be displayed in Link. Maximum length of 30 characters. If a value longer than 30 characters is provided, Link will display \"This Application\" instead.",
              "examples": [
                "GameFi"
              ]
            },
            "language": {
              "type": "string",
              "description": "The language that Link should be displayed in.\n\nSupported languages are:\n- English (`'en'`)\n- French (`'fr'`)\n- Spanish (`'es'`)\n- Dutch (`'nl'`)\n- German(`'de'`)\n\nWhen using a Link customization, the language configured here must match the setting in the customization, or the customization will not be applied.",
              "examples": [
                "en"
              ]
            },
            "country_codes": {
              "minItems": 1,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CountryCode"
              },
              "description": "Specify an array of Plaid-supported country codes using the ISO-3166-1 alpha-2 country code standard. Institutions from all listed countries will be shown.  Supported country codes are: `US`, `CA`, `DE`, `ES`, `FR`, `GB`, `IE`, `NL`. For a complete mapping of supported products by country, see https://plaid.com/global/.\n\nIf Link is launched with multiple country codes, only products that you are enabled for in all countries will be used by Link. Note that while all countries are enabled by default in Sandbox and Development, in Production only US and Canada are enabled by default. To gain access to European institutions in the Production environment, [file a product access Support ticket](https://dashboard.plaid.com/support/new/product-and-development/product-troubleshooting/request-product-access) via the Plaid dashboard. If you initialize with a European country code, your users will see the European consent panel during the Link flow.\n\nIf using a Link customization, make sure the country codes in the customization match those specified in `country_codes`. If both `country_codes` and a Link customization are used, the value in `country_codes` may override the value in the customization.\n\nIf using the Auth features Instant Match, Same-day Micro-deposits, or Automated Micro-deposits, `country_codes` must be set to `['US']`."
            },
            "user": {
              "$ref": "#/components/schemas/LinkTokenCreateRequestUser"
            },
            "products": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Products"
              },
              "description": "List of Plaid product(s) you wish to use. If launching Link in update mode, should be omitted; required otherwise. Valid products are:\n\n`transactions`, `auth`, `identity`, `assets`, `investments`, `liabilities`, `payment_initiation`, `deposit_switch`, `income_verification`, `transfer`\n\n`balance` is *not* a valid value, the Balance product does not require explicit initalization and will automatically be initialized when any other product is initialized.\n\nOnly institutions that support *all* requested products will be shown in Link; to maximize the number of institutions listed, it is recommended to initialize Link with the minimal product set required for your use case. Additional products can be added after Link initialization by calling the relevant endpoints. For details and exceptions, see [Choosing when to initialize products](https://plaid.com/docs/link/best-practices/#choosing-when-to-initialize-products).\n\nNote that, unless you have opted to disable Instant Match support, institutions that support Instant Match will also be shown in Link if `auth` is specified as a product, even though these institutions do not contain `auth` in their product array.\n\nIn Production, you will be billed for each product that you specify when initializing Link. Note that a product cannot be removed from an Item once the Item has been initialized with that product. To stop billing on an Item for subscription-based products, such as Liabilities, Investments, and Transactions, remove the Item via `/item/remove`."
            },
            "webhook": {
              "type": "string",
              "description": "The destination URL to which any webhooks should be sent."
            },
            "access_token": {
              "type": "string",
              "description": "The `access_token` associated with the Item to update, used when updating or modifying an existing `access_token`. Used when launching Link in update mode, when completing the Same-day (manual) Micro-deposit flow, or (optionally) when initializing Link as part of the Payment Initiation (UK and Europe) flow."
            },
            "link_customization_name": {
              "type": "string",
              "description": "The name of the Link customization from the Plaid Dashboard to be applied to Link. If not specified, the `default` customization will be used. When using a Link customization, the language in the customization must match the language selected via the `language` parameter, and the countries in the customization should match the country codes selected via `country_codes`."
            },
            "redirect_uri": {
              "type": "string",
              "description": "A URI indicating the destination where a user should be forwarded after completing the Link flow; used to support OAuth authentication flows when launching Link in the browser or via a webview. The `redirect_uri` should not contain any query parameters. When used in Production or Development, must be an https URI. To specify any subdomain, use `*` as a wildcard character, e.g. `https://*.example.com/oauth.html`. If `android_package_name` is specified, this field should be left blank.  Note that any redirect URI must also be added to the Allowed redirect URIs list in the [developer dashboard](https://dashboard.plaid.com/team/api)."
            },
            "account_filters": {
              "$ref": "#/components/schemas/LinkTokenAccountFilters"
            },
            "institution_id": {
              "type": "string",
              "description": "Used for certain Europe-only configurations, as well as certain legacy use cases in other regions."
            },
            "auth": {
              "$ref": "#/components/schemas/LinkTokenCreateRequestAuth"
            },
            "transfer": {
              "$ref": "#/components/schemas/LinkTokenCreateRequestTransfer"
            },
            "update": {
              "$ref": "#/components/schemas/LinkTokenCreateRequestUpdate"
            }
          },
          "description": "LinkTokenCreateRequest defines the request schema for `/link/token/create`"
        },
        "LinkTokenAccountFilters": {
          "title": "LinkTokenAccountFilters",
          "type": "object",
          "properties": {
            "depository": {
              "$ref": "#/components/schemas/DepositoryFilter"
            },
            "credit": {
              "$ref": "#/components/schemas/CreditFilter"
            }
          },
          "description": "By default, Link will provide limited account filtering: it will only display Institutions that are compatible with all products supplied in the `products` parameter of `/link/token/create`, and, if `auth` is specified in the `products` array, will also filter out accounts other than `checking` and `savings` accounts on the Account Select pane. You can further limit the accounts shown in Link by using `account_filters` to specify the account subtypes to be shown in Link. Only the specified subtypes will be shown. This filtering applies to both the Account Select view (if enabled) and the Institution Select view. Institutions that do not support the selected subtypes will be omitted from Link. To indicate that all subtypes should be shown, use the value `\"all\"`. If the `account_filters` filter is used, any account type for which a filter is not specified will be entirely omitted from Link. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#accounts-schema).\n\nFor institutions using OAuth, the filter will not affect the list of accounts shown by the bank in the OAuth window."
        },
        "LinkTokenCreateRequestTransfer": {
          "title": "LinkTokenCreateRequestTransfer",
          "type": "object",
          "properties": {
            "intent_id": {
              "type": "string",
              "description": "The `id` returned by the `/transfer/intent/create` endpoint."
            }
          },
          "description": "Specifies options for initializing Link for use with the Transfer product."
        },
        "LinkTokenCreateRequestAuth": {
          "title": "LinkTokenCreateRequestAuth",
          "required": [
            "flow_type"
          ],
          "type": "object",
          "properties": {
            "flow_type": {
              "const": "FLEXIBLE_AUTH",
              "type": "string",
              "description": "The optional Auth flow to use. Currently only used to enable Flexible Auth.",
              "examples": [
                "FLEXIBLE_AUTH"
              ]
            }
          },
          "description": "Specifies options for initializing Link for use with the Auth product. This field is currently only required if using the Flexible Auth product (currently in closed beta)."
        },
        "LinkTokenCreateRequestUser": {
          "title": "LinkTokenCreateRequestUser",
          "required": [
            "client_user_id"
          ],
          "type": "object",
          "properties": {
            "client_user_id": {
              "type": "string",
              "description": "A unique ID representing the end user. Typically this will be a user ID number from your application. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`. It is currently used as a means of searching logs for the given user in the Plaid Dashboard."
            },
            "legal_name": {
              "type": "string",
              "description": "The user's full legal name. This is an optional field used in the [returning user experience](https://plaid.com/docs/link/returning-user) to associate Items to the user.",
              "examples": [
                "Richard Hendricks"
              ]
            },
            "phone_number": {
              "type": "string",
              "description": "The user's phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format. This field is optional, but required to enable the [returning user experience](https://plaid.com/docs/link/returning-user)."
            },
            "phone_number_verified_time": {
              "type": "string",
              "description": "The date and time the phone number was verified in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDThh:mm:ssZ`). This field is optional, but required to enable any [returning user experience](https://plaid.com/docs/link/returning-user).\n\n Only pass a verification time for a phone number that you have verified. If you have performed verification but don’t have the time, you may supply a signal value of the start of the UNIX epoch.\n\n Example: `2020-01-01T00:00:00Z`",
              "contentEncoding": "date-time"
            },
            "email_address": {
              "type": "string",
              "description": "The user's email address. This field is optional, but required to enable the [pre-authenticated returning user flow](https://plaid.com/docs/link/returning-user/#enabling-the-returning-user-experience).",
              "examples": [
                "richard@piedpiper.con"
              ]
            },
            "email_address_verified_time": {
              "type": "string",
              "description": "The date and time the email address was verified in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDThh:mm:ssZ`). This is an optional field used in the [returning user experience](https://plaid.com/docs/link/returning-user).\n\n Only pass a verification time for an email address that you have verified. If you have performed verification but don’t have the time, you may supply a signal value of the start of the UNIX epoch.\n\n Example: `2020-01-01T00:00:00Z`",
              "contentEncoding": "date-time"
            },
            "ssn": {
              "type": "string",
              "description": "To be provided in the format \"ddd-dd-dddd\". This field is optional and will support not-yet-implemented functionality for new products."
            },
            "date_of_birth": {
              "type": "string",
              "description": "To be provided in the format \"yyyy-mm-dd\". This field is optional and will support not-yet-implemented functionality for new products.",
              "contentEncoding": "date"
            }
          },
          "description": "An object specifying information about the end user who will be linking their account."
        },
        "LinkTokenCreateRequestUpdate": {
          "title": "LinkTokenCreateRequestUpdate",
          "type": "object",
          "properties": {
            "account_selection_enabled": {
              "type": "boolean",
              "description": "If `true`, enables [update mode with Account Select](https://plaid.com/docs/link/update-mode/#using-update-mode-to-request-new-accounts).",
              "default": false
            }
          },
          "description": "Specifies options for initializing Link for [update mode](https://plaid.com/docs/link/update-mode)."
        },
        "LinkTokenCreateRequestAccountSubtypes": {
          "title": "LinkTokenCreateRequestAccountSubtypes",
          "type": "object",
          "properties": {
            "depository": {
              "$ref": "#/components/schemas/Depository"
            },
            "credit": {
              "$ref": "#/components/schemas/Credit"
            }
          },
          "description": "By default, Link will only display account types that are compatible with all products supplied in the `products` parameter of `/link/token/create`. You can further limit the accounts shown in Link by using `account_filters` to specify the account subtypes to be shown in Link. Only the specified subtypes will be shown. This filtering applies to both the Account Select view (if enabled) and the Institution Select view. Institutions that do not support the selected subtypes will be omitted from Link. To indicate that all subtypes should be shown, use the value `\"all\"`. If the `account_filters` filter is used, any account type for which a filter is not specified will be entirely omitted from Link.\n\nFor a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#accounts-schema).\n\nFor institutions using OAuth, the filter will not affect the list of institutions or accounts shown by the bank in the OAuth window."
        },
        "LinkTokenGetResponse": {
          "title": "LinkTokenGetResponse",
          "required": [
            "link_token",
            "created_at",
            "expiration",
            "metadata",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "link_token": {
              "type": "string",
              "description": "A `link_token`, which can be supplied to Link in order to initialize it and receive a `public_token`, which can be exchanged for an `access_token`."
            },
            "created_at": {
              "type": [
                "string",
                "null"
              ],
              "description": "The creation timestamp for the `link_token`, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
              "contentEncoding": "date-time"
            },
            "expiration": {
              "type": [
                "string",
                "null"
              ],
              "description": "The expiration timestamp for the `link_token`, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
              "contentEncoding": "date-time"
            },
            "metadata": {
              "$ref": "#/components/schemas/LinkTokenGetMetadataResponse"
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "LinkTokenGetResponse defines the response schema for `/link/token/get`"
        },
        "LinkTokenGetMetadataResponse": {
          "title": "LinkTokenGetMetadataResponse",
          "required": [
            "initial_products",
            "webhook",
            "country_codes",
            "language",
            "redirect_uri",
            "client_name"
          ],
          "type": "object",
          "properties": {
            "initial_products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Products"
              },
              "description": "The `products` specified in the `/link/token/create` call."
            },
            "webhook": {
              "type": [
                "string",
                "null"
              ],
              "description": "The `webhook` specified in the `/link/token/create` call."
            },
            "country_codes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CountryCode"
              },
              "description": "The `country_codes` specified in the `/link/token/create` call."
            },
            "language": {
              "type": [
                "string",
                "null"
              ],
              "description": "The `language` specified in the `/link/token/create` call."
            },
            "account_filters": {
              "$ref": "#/components/schemas/AccountFiltersResponse"
            },
            "redirect_uri": {
              "type": [
                "string",
                "null"
              ],
              "description": "The `redirect_uri` specified in the `/link/token/create` call."
            },
            "client_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The `client_name` specified in the `/link/token/create` call."
            }
          },
          "description": "An object specifying the arguments originally provided to the `/link/token/create` call."
        },
        "LinkTokenCreateResponse": {
          "title": "LinkTokenCreateResponse",
          "required": [
            "link_token",
            "expiration",
            "request_id"
          ],
          "type": "object",
          "properties": {
            "link_token": {
              "type": "string",
              "description": "A `link_token`, which can be supplied to Link in order to initialize it and receive a `public_token`, which can be exchanged for an `access_token`."
            },
            "expiration": {
              "type": "string",
              "description": "The expiration date for the `link_token`, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format. A `link_token` created to generate a `public_token` that will be exchanged for a new `access_token` expires after 4 hours. A `link_token` created for an existing Item (such as when updating an existing `access_token` by launching Link in update mode) expires after 30 minutes.",
              "contentEncoding": "date-time"
            },
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "LinkTokenCreateResponse defines the response schema for `/link/token/create`"
        },
        "Item": {
          "title": "Item",
          "required": [
            "item_id",
            "webhook",
            "error",
            "available_products",
            "billed_products",
            "consent_expiration_time",
            "update_type"
          ],
          "type": "object",
          "properties": {
            "item_id": {
              "type": "string",
              "description": "The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive."
            },
            "institution_id": {
              "type": [
                "string",
                "null"
              ],
              "description": "The Plaid Institution ID associated with the Item. Field is `null` for Items created via Same Day Micro-deposits."
            },
            "webhook": {
              "type": [
                "string",
                "null"
              ],
              "description": "The URL registered to receive webhooks for the Item."
            },
            "error": {
              "$ref": "#/components/schemas/Error"
            },
            "available_products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Products"
              },
              "description": "A list of products available for the Item that have not yet been accessed."
            },
            "billed_products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Products"
              },
              "description": "A list of products that have been billed for the Item. Note - `billed_products` is populated in all environments but only requests in Production are billed."
            },
            "products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Products"
              },
              "description": "A list of authorized products for the Item."
            },
            "consent_expiration_time": {
              "type": [
                "string",
                "null"
              ],
              "description": "The RFC 3339 timestamp after which the consent provided by the end user will expire. Upon consent expiration, the item will enter the `ITEM_LOGIN_REQUIRED` error state. To circumvent the `ITEM_LOGIN_REQUIRED` error and maintain continuous consent, the end user can reauthenticate via Link’s update mode in advance of the consent expiration time.\n\nNote - This is only relevant for certain OAuth-based institutions. For all other institutions, this field will be null.",
              "contentEncoding": "date-time"
            },
            "update_type": {
              "$ref": "#/components/schemas/UpdateType"
            }
          },
          "description": "Metadata about the Item."
        },
        "Error": {
          "title": "Error",
          "required": [
            "error_type",
            "error_code",
            "error_message",
            "display_message"
          ],
          "type": "object",
          "properties": {
            "error_type": {
              "$ref": "#/components/schemas/ErrorType"
            },
            "error_code": {
              "type": "string",
              "description": "The particular error code. Safe for programmatic use."
            },
            "error_message": {
              "type": "string",
              "description": "A developer-friendly representation of the error code. This may change over time and is not safe for programmatic use."
            },
            "display_message": {
              "type": [
                "string",
                "null"
              ],
              "description": "A user-friendly representation of the error code. `null` if the error is not related to user action.\n\nThis may change over time and is not safe for programmatic use."
            },
            "request_id": {
              "type": "string",
              "description": "A unique ID identifying the request, to be used for troubleshooting purposes. This field will be omitted in errors provided by webhooks."
            },
            "causes": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "description": "In the Assets product, a request can pertain to more than one Item. If an error is returned for such a request, `causes` will return an array of errors containing a breakdown of these errors on the individual Item level, if any can be identified.\n\n`causes` will only be provided for the `error_type` `ASSET_REPORT_ERROR`. `causes` will also not be populated inside an error nested within a `warning` object."
            },
            "status": {
              "type": [
                "number",
                "null"
              ],
              "description": "The HTTP status code associated with the error. This will only be returned in the response body when the error information is provided via a webhook."
            },
            "documentation_url": {
              "type": "string",
              "description": "The URL of a Plaid documentation page with more information about the error"
            },
            "suggested_action": {
              "type": "string",
              "description": "Suggested steps for resolving the error"
            }
          },
          "description": "We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues.  Error fields will be `null` if no error has occurred."
        },
        "ItemStatusNullable": {
          "title": "ItemStatusNullable",
          "type": "object",
          "properties": {
            "investments": {
              "$ref": "#/components/schemas/ItemStatusInvestments"
            },
            "transactions": {
              "$ref": "#/components/schemas/ItemStatusTransactions"
            },
            "last_webhook": {
              "$ref": "#/components/schemas/ItemStatusLastWebhook"
            }
          }
        },
        "ItemStatusTransactions": {
          "title": "ItemStatusTransactions",
          "type": "object",
          "properties": {
            "last_successful_update": {
              "type": [
                "string",
                "null"
              ],
              "description": "[ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of the last successful transactions update for the Item. The status will update each time Plaid successfully connects with the institution, regardless of whether any new data is available in the update.",
              "contentEncoding": "date-time"
            },
            "last_failed_update": {
              "type": [
                "string",
                "null"
              ],
              "description": "[ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of the last failed transactions update for the Item. The status will update each time Plaid fails an attempt to connect with the institution, regardless of whether any new data is available in the update.",
              "contentEncoding": "date-time"
            }
          },
          "description": "Information about the last successful and failed transactions update for the Item."
        },
        "ItemStatusInvestments": {
          "title": "ItemStatusInvestments",
          "type": "object",
          "properties": {
            "last_successful_update": {
              "type": [
                "string",
                "null"
              ],
              "description": "[ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of the last successful investments update for the Item. The status will update each time Plaid successfully connects with the institution, regardless of whether any new data is available in the update.",
              "contentEncoding": "date-time"
            },
            "last_failed_update": {
              "type": [
                "string",
                "null"
              ],
              "description": "[ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of the last failed investments update for the Item. The status will update each time Plaid fails an attempt to connect with the institution, regardless of whether any new data is available in the update.",
              "contentEncoding": "date-time"
            }
          },
          "description": "Information about the last successful and failed investments update for the Item."
        },
        "ItemStatusLastWebhook": {
          "title": "ItemStatusLastWebhook",
          "type": "object",
          "properties": {
            "sent_at": {
              "type": [
                "string",
                "null"
              ],
              "description": "[ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of when the webhook was fired.",
              "contentEncoding": "date-time"
            },
            "code_sent": {
              "type": [
                "string",
                "null"
              ],
              "description": "The last webhook code sent."
            }
          },
          "description": "Information about the last webhook fired for the Item."
        },
        "ItemStatus": {
          "title": "ItemStatus",
          "type": "object",
          "properties": {
            "investments": {
              "$ref": "#/components/schemas/ItemStatusInvestments"
            },
            "transactions": {
              "$ref": "#/components/schemas/ItemStatusTransactions"
            },
            "last_webhook": {
              "$ref": "#/components/schemas/ItemStatusLastWebhook"
            }
          },
          "description": "An object with information about the status of the Item."
        },
        "AccountType": {
          "title": "AccountType",
          "enum": [
            "investment",
            "credit",
            "depository",
            "loan",
            "brokerage",
            "other"
          ],
          "type": "string",
          "description": "`investment:` Investment account. In API versions 2018-05-22 and earlier, this type is called `brokerage` instead.\n\n`credit:` Credit card\n\n`depository:` Depository account\n\n`loan:` Loan account\n\n`brokerage`: An investment account. Used for `/assets/` endpoints only; other endpoints use `investment`.\n\n`other:` Non-specified account type\n\nSee the [Account type schema](https://plaid.com/docs/api/accounts#account-type-schema) for a full listing of account types and corresponding subtypes.",
          "examples": [
            "investment"
          ]
        },
        "OverrideAccountType": {
          "title": "OverrideAccountType",
          "enum": [
            "investment",
            "credit",
            "depository",
            "loan",
            "payroll",
            "other"
          ],
          "type": "string",
          "description": "`investment:` Investment account.\n\n`credit:` Credit card\n\n`depository:` Depository account\n\n`loan:` Loan account\n\n`payroll:` Payroll acccount\n\n`other:` Non-specified account type\n\nSee the [Account type schema](https://plaid.com/docs/api/accounts#account-type-schema) for a full listing of account types and corresponding subtypes.",
          "examples": [
            "investment"
          ]
        },
        "Account": {
          "title": "Account",
          "required": [
            "account_id",
            "balances",
            "mask",
            "name",
            "official_name",
            "type",
            "subtype"
          ],
          "type": "object",
          "properties": {
            "account_id": {
              "type": "string",
              "description": "Plaid’s unique identifier for the account. This value will not change unless Plaid can't reconcile the account with the data returned by the financial institution. This may occur, for example, when the name of the account changes. If this happens a new `account_id` will be assigned to the account.\n\nThe `account_id` can also change if the `access_token` is deleted and the same credentials that were used to generate that `access_token` are used to generate a new `access_token` on a later date. In that case, the new `account_id` will be different from the old `account_id`.\n\nIf an account with a specific `account_id` disappears instead of changing, the account is likely closed. Closed accounts are not returned by the Plaid API.\n\nLike all Plaid identifiers, the `account_id` is case sensitive."
            },
            "balances": {
              "$ref": "#/components/schemas/AccountBalance"
            },
            "mask": {
              "type": [
                "string",
                "null"
              ],
              "description": "The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts, and it may also not match the mask that the bank displays to the user."
            },
            "name": {
              "type": "string",
              "description": "The name of the account, either assigned by the user or by the financial institution itself"
            },
            "official_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The official name of the account as given by the financial institution"
            },
            "type": {
              "$ref": "#/components/schemas/AccountType"
            },
            "subtype": {
              "$ref": "#/components/schemas/AccountSubtype"
            },
            "verification_status": {
              "$ref": "#/components/schemas/VerificationStatus"
            }
          },
          "description": "A single account at a financial institution."
        },
        "AccountBalance": {
          "title": "AccountBalance",
          "required": [
            "available",
            "current",
            "limit",
            "iso_currency_code",
            "unofficial_currency_code"
          ],
          "type": "object",
          "properties": {
            "available": {
              "type": [
                "number",
                "null"
              ],
              "description": "The amount of funds available to be withdrawn from the account, as determined by the financial institution.\n\nFor `credit`-type accounts, the `available` balance typically equals the `limit` less the `current` balance, less any pending outflows plus any pending inflows.\n\nFor `depository`-type accounts, the `available` balance typically equals the `current` balance less any pending outflows plus any pending inflows. For `depository`-type accounts, the `available` balance does not include the overdraft limit.\n\nFor `investment`-type accounts (or `brokerage`-type accounts for API versions 2018-05-22 and earlier), the `available` balance is the total cash available to withdraw as presented by the institution.\n\nNote that not all institutions calculate the `available`  balance. In the event that `available` balance is unavailable, Plaid will return an `available` balance value of `null`.\n\nAvailable balance may be cached and is not guaranteed to be up-to-date in realtime unless the value was returned by `/accounts/balance/get`.\n\nIf `current` is `null` this field is guaranteed not to be `null`."
            },
            "current": {
              "type": [
                "number",
                "null"
              ],
              "description": "The total amount of funds in or owed by the account.\n\nFor `credit`-type accounts, a positive balance indicates the amount owed; a negative amount indicates the lender owing the account holder.\n\nFor `loan`-type accounts, the current balance is the principal remaining on the loan, except in the case of student loan accounts at Sallie Mae (`ins_116944`). For Sallie Mae student loans, the account's balance includes both principal and any outstanding interest.\n\nFor `investment`-type accounts (or `brokerage`-type accounts for API versions 2018-05-22 and earlier), the current balance is the total value of assets as presented by the institution.\n\nNote that balance information may be cached unless the value was returned by `/accounts/balance/get`; if the Item is enabled for Transactions, the balance will be at least as recent as the most recent Transaction update. If you require realtime balance information, use the `available` balance as provided by `/accounts/balance/get`.\n\nWhen returned by `/accounts/balance/get`, this field may be `null`. When this happens, `available` is guaranteed not to be `null`."
            },
            "limit": {
              "type": [
                "number",
                "null"
              ],
              "description": "For `credit`-type accounts, this represents the credit limit.\n\nFor `depository`-type accounts, this represents the pre-arranged overdraft limit, which is common for current (checking) accounts in Europe.\n\nIn North America, this field is typically only available for `credit`-type accounts."
            },
            "iso_currency_code": {
              "type": [
                "string",
                "null"
              ],
              "description": "The ISO-4217 currency code of the balance. Always null if `unofficial_currency_code` is non-null."
            },
            "unofficial_currency_code": {
              "type": [
                "string",
                "null"
              ],
              "description": "The unofficial currency code associated with the balance. Always null if `iso_currency_code` is non-null. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.\n\nSee the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `unofficial_currency_code`s."
            },
            "last_updated_datetime": {
              "type": [
                "string",
                "null"
              ],
              "description": "Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the last time that the balance for the given account has been updated\n\nThis is currently only provided when the `min_last_updated_datetime` is passed when calling `/accounts/balance/get` for `ins_128026` (Capital One).",
              "contentEncoding": "date-time"
            }
          },
          "description": "A set of fields describing the balance for an account. Balance information may be cached unless the balance object was returned by `/accounts/balance/get`."
        },
        "AccountSubtype": {
          "title": "AccountSubtype",
          "enum": [
            "401a",
            "401k",
            "403B",
            "457b",
            "529",
            "brokerage",
            "cash isa",
            "education savings account",
            "ebt",
            "fixed annuity",
            "gic",
            "health reimbursement arrangement",
            "hsa",
            "isa",
            "ira",
            "lif",
            "life insurance",
            "lira",
            "lrif",
            "lrsp",
            "non-taxable brokerage account",
            "other",
            "other insurance",
            "other annuity",
            "prif",
            "rdsp",
            "resp",
            "rlif",
            "rrif",
            "pension",
            "profit sharing plan",
            "retirement",
            "roth",
            "roth 401k",
            "rrsp",
            "sep ira",
            "simple ira",
            "sipp",
            "stock plan",
            "thrift savings plan",
            "tfsa",
            "trust",
            "ugma",
            "utma",
            "variable annuity",
            "credit card",
            "paypal",
            "cd",
            "checking",
            "savings",
            "money market",
            "prepaid",
            "auto",
            "business",
            "commercial",
            "construction",
            "consumer",
            "home equity",
            "loan",
            "mortgage",
            "overdraft",
            "line of credit",
            "student",
            "cash management",
            "keogh",
            "mutual fund",
            "recurring",
            "rewards",
            "safe deposit",
            "sarsep",
            "payroll"
          ],
          "type": "string",
          "description": "See the [Account type schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full listing of account types and corresponding subtypes.",
          "examples": [
            "401a"
          ]
        },
        "NumbersACH": {
          "title": "NumbersACH",
          "required": [
            "account_id",
            "account",
            "routing",
            "wire_routing"
          ],
          "type": "object",
          "properties": {
            "account_id": {
              "type": "string",
              "description": "The Plaid account ID associated with the account numbers"
            },
            "account": {
              "type": "string",
              "description": "The ACH account number for the account.\n\nNote that when using OAuth with Chase Bank (`ins_56`), Chase will issue \"tokenized\" routing and account numbers, which are not the user's actual account and routing numbers. These tokenized numbers should work identically to normal account and routing numbers. The digits returned in the `mask` field will continue to reflect the actual account number, rather than the tokenized account number; for this reason, when displaying account numbers to the user to help them identify their account in your UI, always use the `mask` rather than truncating the `account` number. If a user revokes their permissions to your app, the tokenized numbers will continue to work for ACH deposits, but not withdrawals."
            },
            "routing": {
              "type": "string",
              "description": "The ACH routing number for the account. If the institution is `ins_56`, this may be a tokenized routing number. For more information, see the description of the `account` field."
            },
            "wire_routing": {
              "type": [
                "string",
                "null"
              ],
              "description": "The wire transfer routing number for the account, if available"
            }
          },
          "description": "Identifying information for transferring money to or from a US account via ACH or wire transfer."
        },
        "NumbersACHNullable": {
          "title": "NumbersACHNullable",
          "required": [
            "account_id",
            "account",
            "routing",
            "wire_routing"
          ],
          "type": "object",
          "properties": {
            "account_id": {
              "type": "string",
              "description": "The Plaid account ID associated with the account numbers"
            },
            "account": {
              "type": "string",
              "description": "The ACH account number for the account.\n\nNote that when using OAuth with Chase Bank (`ins_56`), Chase will issue \"tokenized\" routing and account numbers, which are not the user's actual account and routing numbers. These tokenized numbers should work identically to normal account and routing numbers. The digits returned in the `mask` field will continue to reflect the actual account number, rather than the tokenized account number; for this reason, when displaying account numbers to the user to help them identify their account in your UI, always use the `mask` rather than truncating the `account` number. If a user revokes their permissions to your app, the tokenized numbers will continue to work for ACH deposits, but not withdrawals."
            },
            "routing": {
              "type": "string",
              "description": "The ACH routing number for the account. If the institution is `ins_56`, this may be a tokenized routing number. For more information, see the description of the `account` field."
            },
            "wire_routing": {
              "type": [
                "string",
                "null"
              ],
              "description": "The wire transfer routing number for the account, if available"
            }
          }
        },
        "RemovedTransaction": {
          "title": "RemovedTransaction",
          "type": "object",
          "properties": {
            "transaction_id": {
              "type": "string",
              "description": "The ID of the removed transaction."
            }
          },
          "description": "A representation of a removed transaction"
        },
        "TransactionBase": {
          "title": "TransactionBase",
          "required": [
            "account_id",
            "amount",
            "iso_currency_code",
            "unofficial_currency_code",
            "date",
            "pending",
            "transaction_id"
          ],
          "type": "object",
          "properties": {
            "pending_transaction_id": {
              "type": [
                "string",
                "null"
              ],
              "description": "The ID of a posted transaction's associated pending transaction, where applicable."
            },
            "category_id": {
              "type": [
                "string",
                "null"
              ],
              "description": "The ID of the category to which this transaction belongs. See [Categories](https://plaid.com/docs/#category-overview).\n\nIf the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights."
            },
            "category": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "string"
              },
              "description": "A hierarchical array of the categories to which this transaction belongs. See [Categories](https://plaid.com/docs/#category-overview).\n\nIf the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights."
            },
            "location": {
              "$ref": "#/components/schemas/TransactionLocation"
            },
            "payment_meta": {
              "$ref": "#/components/schemas/PaymentMeta"
            },
            "account_owner": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the account owner. This field is not typically populated and only relevant when dealing with sub-accounts."
            },
            "name": {
              "type": "string",
              "description": "The merchant name or transaction description.\n\nIf the `transactions` object was returned by a Transactions endpoint such as `/transactions/get`, this field will always appear. If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights."
            },
            "original_description": {
              "type": [
                "string",
                "null"
              ],
              "description": "The string returned by the financial institution to describe the transaction. For transactions returned by `/transactions/get`, this field is in beta and will be omitted unless the client is both enrolled in the closed beta program and has set `options.include_original_description` to `true`."
            },
            "account_id": {
              "type": "string",
              "description": "The ID of the account in which this transaction occurred."
            },
            "amount": {
              "type": "number",
              "description": "The settled value of the transaction, denominated in the account's currency, as stated in `iso_currency_code` or `unofficial_currency_code`. Positive values when money moves out of the account; negative values when money moves in. For example, debit card purchases are positive; credit card payments, direct deposits, and refunds are negative."
            },
            "iso_currency_code": {
              "type": [
                "string",
                "null"
              ],
              "description": "The ISO-4217 currency code of the transaction. Always `null` if `unofficial_currency_code` is non-null."
            },
            "unofficial_currency_code": {
              "type": [
                "string",
                "null"
              ],
              "description": "The unofficial currency code associated with the transaction. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.\n\nSee the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s."
            },
            "date": {
              "type": "string",
              "description": "For pending transactions, the date that the transaction occurred; for posted transactions, the date that the transaction posted. Both dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DD` ).",
              "contentEncoding": "date"
            },
            "pending": {
              "type": "boolean",
              "description": "When `true`, identifies the transaction as pending or unsettled. Pending transaction details (name, type, amount, category ID) may change before they are settled."
            },
            "transaction_id": {
              "type": "string",
              "description": "The unique ID of the transaction. Like all Plaid identifiers, the `transaction_id` is case sensitive."
            },
            "merchant_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The merchant name, as extracted by Plaid from the `name` field."
            },
            "check_number": {
              "type": [
                "string",
                "null"
              ],
              "description": "The check number of the transaction. This field is only populated for check transactions."
            }
          },
          "description": "A representation of a transaction"
        },
        "Transaction": {
          "title": "Transaction",
          "required": [
            "pending_transaction_id",
            "category_id",
            "category",
            "location",
            "payment_meta",
            "account_owner",
            "name",
            "account_id",
            "amount",
            "iso_currency_code",
            "unofficial_currency_code",
            "date",
            "pending",
            "transaction_id",
            "payment_channel",
            "authorized_date",
            "authorized_datetime",
            "datetime",
            "transaction_code"
          ],
          "type": "object",
          "properties": {
            "pending_transaction_id": {
              "type": [
                "string",
                "null"
              ],
              "description": "The ID of a posted transaction's associated pending transaction, where applicable."
            },
            "category_id": {
              "type": [
                "string",
                "null"
              ],
              "description": "The ID of the category to which this transaction belongs. See [Categories](https://plaid.com/docs/#category-overview).\n\nIf the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights."
            },
            "category": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "string"
              },
              "description": "A hierarchical array of the categories to which this transaction belongs. See [Categories](https://plaid.com/docs/#category-overview).\n\nIf the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights."
            },
            "location": {
              "$ref": "#/components/schemas/TransactionLocation"
            },
            "payment_meta": {
              "$ref": "#/components/schemas/PaymentMeta"
            },
            "account_owner": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the account owner. This field is not typically populated and only relevant when dealing with sub-accounts."
            },
            "name": {
              "type": "string",
              "description": "The merchant name or transaction description.\n\nIf the `transactions` object was returned by a Transactions endpoint such as `/transactions/get`, this field will always appear. If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights."
            },
            "original_description": {
              "type": [
                "string",
                "null"
              ],
              "description": "The string returned by the financial institution to describe the transaction. For transactions returned by `/transactions/get`, this field is in beta and will be omitted unless the client is both enrolled in the closed beta program and has set `options.include_original_description` to `true`."
            },
            "account_id": {
              "type": "string",
              "description": "The ID of the account in which this transaction occurred."
            },
            "amount": {
              "type": "number",
              "description": "The settled value of the transaction, denominated in the account's currency, as stated in `iso_currency_code` or `unofficial_currency_code`. Positive values when money moves out of the account; negative values when money moves in. For example, debit card purchases are positive; credit card payments, direct deposits, and refunds are negative."
            },
            "iso_currency_code": {
              "type": [
                "string",
                "null"
              ],
              "description": "The ISO-4217 currency code of the transaction. Always `null` if `unofficial_currency_code` is non-null."
            },
            "unofficial_currency_code": {
              "type": [
                "string",
                "null"
              ],
              "description": "The unofficial currency code associated with the transaction. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.\n\nSee the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s."
            },
            "date": {
              "type": "string",
              "description": "For pending transactions, the date that the transaction occurred; for posted transactions, the date that the transaction posted. Both dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DD` ).",
              "contentEncoding": "date"
            },
            "pending": {
              "type": "boolean",
              "description": "When `true`, identifies the transaction as pending or unsettled. Pending transaction details (name, type, amount, category ID) may change before they are settled."
            },
            "transaction_id": {
              "type": "string",
              "description": "The unique ID of the transaction. Like all Plaid identifiers, the `transaction_id` is case sensitive."
            },
            "merchant_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The merchant name, as extracted by Plaid from the `name` field."
            },
            "check_number": {
              "type": [
                "string",
                "null"
              ],
              "description": "The check number of the transaction. This field is only populated for check transactions."
            },
            "payment_channel": {
              "$ref": "#/components/schemas/PaymentChannel"
            },
            "authorized_date": {
              "type": [
                "string",
                "null"
              ],
              "description": "The date that the transaction was authorized. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DD` ).",
              "contentEncoding": "date"
            },
            "authorized_datetime": {
              "type": [
                "string",
                "null"
              ],
              "description": "Date and time when a transaction was authorized in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DDTHH:mm:ssZ` ).\n\nThis field is only populated for UK institutions. For institutions in other countries, will be `null`.",
              "contentEncoding": "date-time"
            },
            "datetime": {
              "type": [
                "string",
                "null"
              ],
              "description": "Date and time when a transaction was posted in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DDTHH:mm:ssZ` ).\n\nThis field is only populated for UK institutions. For institutions in other countries, will be `null`.",
              "contentEncoding": "date-time"
            },
            "transaction_code": {
              "$ref": "#/components/schemas/transaction_code"
            },
            "personal_finance_category": {
              "$ref": "#/components/schemas/PersonalFinanceCategory2"
            }
          },
          "description": "A representation of a transaction"
        },
        "TransactionLocation": {
          "title": "TransactionLocation",
          "required": [
            "address",
            "city",
            "region",
            "postal_code",
            "country",
            "lat",
            "lon",
            "store_number"
          ],
          "type": "object",
          "properties": {
            "address": {
              "type": [
                "string",
                "null"
              ],
              "description": "The street address where the transaction occurred."
            },
            "city": {
              "type": [
                "string",
                "null"
              ],
              "description": "The city where the transaction occurred."
            },
            "region": {
              "type": [
                "string",
                "null"
              ],
              "description": "The region or state where the transaction occurred. In API versions 2018-05-22 and earlier, this field is called `state`."
            },
            "postal_code": {
              "type": [
                "string",
                "null"
              ],
              "description": "The postal code where the transaction occurred. In API versions 2018-05-22 and earlier, this field is called `zip`."
            },
            "country": {
              "type": [
                "string",
                "null"
              ],
              "description": "The ISO 3166-1 alpha-2 country code where the transaction occurred."
            },
            "lat": {
              "type": [
                "number",
                "null"
              ],
              "description": "The latitude where the transaction occurred."
            },
            "lon": {
              "type": [
                "number",
                "null"
              ],
              "description": "The longitude where the transaction occurred."
            },
            "store_number": {
              "type": [
                "string",
                "null"
              ],
              "description": "The merchant defined store number where the transaction occurred."
            }
          },
          "description": "A representation of where a transaction took place"
        },
        "TransactionStream": {
          "title": "TransactionStream",
          "required": [
            "account_id",
            "stream_id",
            "category_id",
            "category",
            "description",
            "first_date",
            "last_date",
            "frequency",
            "transaction_ids",
            "average_amount",
            "is_active"
          ],
          "type": "object",
          "properties": {
            "account_id": {
              "type": "string",
              "description": "The ID of the account to which the stream belongs"
            },
            "stream_id": {
              "type": "string",
              "description": "A unique id for the stream"
            },
            "category_id": {
              "type": "string",
              "description": "The ID of the category to which this transaction belongs. See [Categories](https://plaid.com/docs/#category-overview)."
            },
            "category": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A hierarchical array of the categories to which this transaction belongs. See [Categories](https://plaid.com/docs/#category-overview)."
            },
            "description": {
              "type": "string",
              "description": "A description of the transaction stream."
            },
            "first_date": {
              "type": "string",
              "description": "The posted date of the earliest transaction in the stream.",
              "contentEncoding": "date"
            },
            "last_date": {
              "type": "string",
              "description": "The posted date of the latest transaction in the stream.",
              "contentEncoding": "date"
            },
            "frequency": {
              "$ref": "#/components/schemas/RecurringTransactionFrequency"
            },
            "transaction_ids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "An array of Plaid transaction IDs belonging to the stream, sorted by posted date."
            },
            "average_amount": {
              "$ref": "#/components/schemas/TransactionStreamAmount"
            },
            "is_active": {
              "type": "boolean",
              "description": "indicates whether the transaction stream is still live."
            }
          },
          "description": "A grouping of related transactions"
        },
        "TransactionStreamAmount": {
          "title": "TransactionStreamAmount",
          "type": "object",
          "properties": {
            "amount": {
              "type": "number",
              "description": "represents the numerical value of an amount."
            },
            "iso_currency_code": {
              "type": [
                "string",
                "null"
              ],
              "description": "The ISO-4217 currency code of the amount. Always `null` if `unofficial_currency_code` is non-`null`.\n\nSee the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s."
            },
            "unofficial_currency_code": {
              "type": [
                "string",
                "null"
              ],
              "description": "The unofficial currency code of the amount. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries."
            }
          },
          "description": "Object with data pertaining to an amount on the transaction stream."
        },
        "RecurringTransactionFrequency": {
          "title": "RecurringTransactionFrequency",
          "enum": [
            "UNKNOWN",
            "WEEKLY",
            "BIWEEKLY",
            "SEMI_MONTHLY",
            "MONTHLY"
          ],
          "type": "string",
          "description": "describes the frequency of the transaction stream.",
          "examples": [
            "UNKNOWN"
          ]
        },
        "Institution": {
          "title": "Institution",
          "required": [
            "institution_id",
            "name",
            "products",
            "country_codes",
            "routing_numbers",
            "oauth"
          ],
          "type": "object",
          "properties": {
            "institution_id": {
              "type": "string",
              "description": "Unique identifier for the institution"
            },
            "name": {
              "type": "string",
              "description": "The official name of the institution"
            },
            "products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Products"
              },
              "description": "A list of the Plaid products supported by the institution. Note that only institutions that support Instant Auth will return `auth` in the product array; institutions that do not list `auth` may still support other Auth methods such as Instant Match or Automated Micro-deposit Verification. For more details, see [Full Auth coverage](https://plaid.com/docs/auth/coverage/)."
            },
            "country_codes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CountryCode"
              },
              "description": "A list of the country codes supported by the institution."
            },
            "url": {
              "type": [
                "string",
                "null"
              ],
              "description": "The URL for the institution's website"
            },
            "primary_color": {
              "type": [
                "string",
                "null"
              ],
              "description": "Hexadecimal representation of the primary color used by the institution"
            },
            "logo": {
              "type": [
                "string",
                "null"
              ],
              "description": "Base64 encoded representation of the institution's logo"
            },
            "routing_numbers": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "string"
              },
              "description": "A partial list of routing numbers associated with the institution. This list is provided for the purpose of looking up institutions by routing number. It is not comprehensive and should never be used as a complete list of routing numbers for an institution."
            },
            "oauth": {
              "type": "boolean",
              "description": "Indicates that the institution has an OAuth login flow. This is primarily relevant to institutions with European country codes."
            },
            "status": {
              "$ref": "#/components/schemas/InstitutionStatus"
            },
            "auth_metadata": {
              "$ref": "#/components/schemas/AuthMetadata"
            }
          },
          "description": "Details relating to a specific financial institution"
        },
        "InstitutionStatus": {
          "title": "InstitutionStatus",
          "required": [
            "item_logins",
            "transactions_updates",
            "auth",
            "balance",
            "identity",
            "investments_updates"
          ],
          "type": "object",
          "properties": {
            "item_logins": {
              "$ref": "#/components/schemas/ProductStatus"
            },
            "transactions_updates": {
              "$ref": "#/components/schemas/ProductStatus"
            },
            "auth": {
              "$ref": "#/components/schemas/ProductStatus"
            },
            "balance": {
              "$ref": "#/components/schemas/ProductStatus"
            },
            "identity": {
              "$ref": "#/components/schemas/ProductStatus"
            },
            "investments_updates": {
              "$ref": "#/components/schemas/ProductStatus"
            },
            "liabilities_updates": {
              "$ref": "#/components/schemas/ProductStatus"
            },
            "liabilities": {
              "$ref": "#/components/schemas/ProductStatus"
            },
            "investments": {
              "$ref": "#/components/schemas/ProductStatus"
            },
            "health_incidents": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "$ref": "#/components/schemas/HealthIncident"
              },
              "description": "Details of recent health incidents associated with the institution."
            }
          },
          "description": "The status of an institution is determined by the health of its Item logins, Transactions updates, Investments updates, Liabilities updates, Auth requests, Balance requests, Identity requests, Investments requests, and Liabilities requests. A login attempt is conducted during the initial Item add in Link. If there is not enough traffic to accurately calculate an institution's status, Plaid will return null rather than potentially inaccurate data.\n\nInstitution status is accessible in the Dashboard and via the API using the `/institutions/get_by_id` endpoint with the `include_status` option set to true. Note that institution status is not available in the Sandbox environment."
        },
        "CountryCode": {
          "title": "CountryCode",
          "enum": [
            "US",
            "GB",
            "ES",
            "NL",
            "FR",
            "IE",
            "CA",
            "DE"
          ],
          "type": "string",
          "description": "ISO-3166-1 alpha-2 country code standard.",
          "examples": [
            "US"
          ]
        },
        "PaymentMeta": {
          "title": "PaymentMeta",
          "required": [
            "reference_number",
            "ppd_id",
            "payee",
            "by_order_of",
            "payer",
            "payment_method",
            "payment_processor",
            "reason"
          ],
          "type": "object",
          "properties": {
            "reference_number": {
              "type": [
                "string",
                "null"
              ],
              "description": "The transaction reference number supplied by the financial institution."
            },
            "ppd_id": {
              "type": [
                "string",
                "null"
              ],
              "description": "The ACH PPD ID for the payer."
            },
            "payee": {
              "type": [
                "string",
                "null"
              ],
              "description": "For transfers, the party that is receiving the transaction."
            },
            "by_order_of": {
              "type": [
                "string",
                "null"
              ],
              "description": "The party initiating a wire transfer. Will be `null` if the transaction is not a wire transfer."
            },
            "payer": {
              "type": [
                "string",
                "null"
              ],
              "description": "For transfers, the party that is paying the transaction."
            },
            "payment_method": {
              "type": [
                "string",
                "null"
              ],
              "description": "The type of transfer, e.g. 'ACH'"
            },
            "payment_processor": {
              "type": [
                "string",
                "null"
              ],
              "description": "The name of the payment processor"
            },
            "reason": {
              "type": [
                "string",
                "null"
              ],
              "description": "The payer-supplied description of the transfer."
            }
          },
          "description": "Transaction information specific to inter-bank transfers. If the transaction was not an inter-bank transfer, all fields will be `null`.\n\nIf the `transactions` object was returned by a Transactions endpoint such as `/transactions/get`, the `payment_meta` key will always appear, but no data elements are guaranteed. If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights."
        },
        "transaction_code": {
          "title": "transaction_code",
          "enum": [
            "adjustment",
            "atm",
            "bank charge",
            "bill payment",
            "cash",
            "cashback",
            "cheque",
            "direct debit",
            "interest",
            "purchase",
            "standing order",
            "transfer"
          ],
          "type": "string",
          "description": "An identifier classifying the transaction type.\n\nThis field is only populated for European institutions. For institutions in the US and Canada, this field is set to `null`.\n\n`adjustment:` Bank adjustment\n\n`atm:` Cash deposit or withdrawal via an automated teller machine\n\n`bank charge:` Charge or fee levied by the institution\n\n`bill payment`: Payment of a bill\n\n`cash:` Cash deposit or withdrawal\n\n`cashback:` Cash withdrawal while making a debit card purchase\n\n`cheque:` Document ordering the payment of money to another person or organization\n\n`direct debit:` Automatic withdrawal of funds initiated by a third party at a regular interval\n\n`interest:` Interest earned or incurred\n\n`purchase:` Purchase made with a debit or credit card\n\n`standing order:` Payment instructed by the account holder to a third party at a regular interval\n\n`transfer:` Transfer of money between accounts",
          "examples": [
            "adjustment"
          ]
        },
        "Category": {
          "title": "Category",
          "required": [
            "category_id",
            "group",
            "hierarchy"
          ],
          "type": "object",
          "properties": {
            "category_id": {
              "type": "string",
              "description": "An identifying number for the category. `category_id` is a Plaid-specific identifier and does not necessarily correspond to merchant category codes."
            },
            "group": {
              "type": "string",
              "description": "`place` for physical transactions or `special` for other transactions such as bank charges."
            },
            "hierarchy": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A hierarchical array of the categories to which this `category_id` belongs."
            }
          },
          "description": "Information describing a transaction category"
        },
        "PersonalFinanceCategory": {
          "title": "PersonalFinanceCategory",
          "required": [
            "primary",
            "detailed"
          ],
          "type": "object",
          "properties": {
            "primary": {
              "type": "string",
              "description": "A high level category that communicates the broad category of the transaction."
            },
            "detailed": {
              "type": "string",
              "description": "Provides additional granularity to the primary categorization."
            }
          },
          "description": "Information describing the intent of the transaction. Most relevant for personal finance use cases, but not limited to such use cases. The field is currently in beta.\n\nThe complete category can be generated by concatenating primary and detailed categories.\n\nThis feature is currently in beta – to request access, contact transactions-feedback@plaid.com."
        },
        "PhoneNumber": {
          "title": "PhoneNumber",
          "required": [
            "data",
            "primary",
            "type"
          ],
          "type": "object",
          "properties": {
            "data": {
              "type": "string",
              "description": "The phone number."
            },
            "primary": {
              "type": "boolean",
              "description": "When `true`, identifies the phone number as the primary number on an account."
            },
            "type": {
              "$ref": "#/components/schemas/Type"
            }
          },
          "description": "A phone number"
        },
        "Email": {
          "title": "Email",
          "required": [
            "data",
            "primary",
            "type"
          ],
          "type": "object",
          "properties": {
            "data": {
              "type": "string",
              "description": "The email address."
            },
            "primary": {
              "type": "boolean",
              "description": "When `true`, identifies the email address as the primary email on an account."
            },
            "type": {
              "$ref": "#/components/schemas/Type1"
            }
          },
          "description": "An object representing an email address"
        },
        "Address": {
          "title": "Address",
          "required": [
            "data"
          ],
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/AddressData"
            },
            "primary": {
              "type": "boolean",
              "description": "When `true`, identifies the address as the primary address on an account."
            }
          },
          "description": "A physical mailing address."
        },
        "AddressData": {
          "title": "AddressData",
          "required": [
            "city",
            "region",
            "street",
            "postal_code",
            "country"
          ],
          "type": "object",
          "properties": {
            "city": {
              "type": "string",
              "description": "The full city name"
            },
            "region": {
              "type": [
                "string",
                "null"
              ],
              "description": "The region or state. In API versions 2018-05-22 and earlier, this field is called `state`.\nExample: `\"NC\"`"
            },
            "street": {
              "type": "string",
              "description": "The full street address\nExample: `\"564 Main Street, APT 15\"`"
            },
            "postal_code": {
              "type": [
                "string",
                "null"
              ],
              "description": "The postal code. In API versions 2018-05-22 and earlier, this field is called `zip`."
            },
            "country": {
              "type": [
                "string",
                "null"
              ],
              "description": "The ISO 3166-1 alpha-2 country code"
            }
          },
          "description": "Data about the components comprising an address."
        },
        "HistoricalBalance": {
          "title": "HistoricalBalance",
          "required": [
            "date",
            "current",
            "iso_currency_code",
            "unofficial_currency_code"
          ],
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "The date of the calculated historical balance, in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD)",
              "contentEncoding": "date"
            },
            "current": {
              "type": "number",
              "description": "The total amount of funds in the account, calculated from the `current` balance in the `balance` object by subtracting inflows and adding back outflows according to the posted date of each transaction.\n\nIf the account has any pending transactions, historical balance amounts on or after the date of the earliest pending transaction may differ if retrieved in subsequent Asset Reports as a result of those pending transactions posting."
            },
            "iso_currency_code": {
              "type": [
                "string",
                "null"
              ],
              "description": "The ISO-4217 currency code of the balance. Always `null` if `unofficial_currency_code` is non-`null`."
            },
            "unofficial_currency_code": {
              "type": [
                "string",
                "null"
              ],
              "description": "The unofficial currency code associated with the balance. Always `null` if `iso_currency_code` is non-`null`.\n\nSee the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s."
            }
          },
          "description": "An object representing a balance held by an account in the past"
        },
        "Owner": {
          "title": "Owner",
          "required": [
            "names",
            "phone_numbers",
            "emails",
            "addresses"
          ],
          "type": "object",
          "properties": {
            "names": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of names associated with the account by the financial institution. These should always be the names of individuals, even for business accounts. If the name of a business is reported, please contact Plaid Support. In the case of a joint account, Plaid will make a best effort to report the names of all account holders.\n\nIf an Item contains multiple accounts with different owner names, some institutions will report all names associated with the Item in each account's `names` array."
            },
            "phone_numbers": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PhoneNumber"
              },
              "description": "A list of phone numbers associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution."
            },
            "emails": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Email"
              },
              "description": "A list of email addresses associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution."
            },
            "addresses": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Address"
              },
              "description": "Data about the various addresses associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution."
            }
          },
          "description": "Data returned from the financial institution about the owner or owners of an account. Only the `names` array must be non-empty."
        },
        "OwnerOverride": {
          "title": "OwnerOverride",
          "required": [
            "names",
            "phone_numbers",
            "emails",
            "addresses"
          ],
          "type": "object",
          "properties": {
            "names": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of names associated with the account by the financial institution. These should always be the names of individuals, even for business accounts. Note that the same name data will be used for all accounts associated with an Item."
            },
            "phone_numbers": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PhoneNumber"
              },
              "description": "A list of phone numbers associated with the account."
            },
            "emails": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Email"
              },
              "description": "A list of email addresses associated with the account."
            },
            "addresses": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Address"
              },
              "description": "Data about the various addresses associated with the account."
            }
          },
          "description": "Data about the owner or owners of an account. Any fields not specified will be filled in with default Sandbox information."
        },
        "AuthMetadata": {
          "title": "AuthMetadata",
          "required": [
            "supported_methods"
          ],
          "type": "object",
          "properties": {
            "supported_methods": {
              "$ref": "#/components/schemas/AuthSupportedMethods"
            }
          },
          "description": "Metadata that captures information about the Auth features of an institution."
        },
        "AuthSupportedMethods": {
          "title": "AuthSupportedMethods",
          "required": [
            "instant_auth",
            "instant_match",
            "automated_micro_deposits"
          ],
          "type": "object",
          "properties": {
            "instant_auth": {
              "type": "boolean",
              "description": "Indicates if instant auth is supported."
            },
            "instant_match": {
              "type": "boolean",
              "description": "Indicates if instant match is supported."
            },
            "automated_micro_deposits": {
              "type": "boolean",
              "description": "Indicates if automated microdeposits are supported."
            }
          },
          "description": "Metadata specifically related to which auth methods an institution supports."
        },
        "Products": {
          "title": "Products",
          "enum": [
            "auth",
            "balance",
            "identity",
            "transactions",
            "standing_orders",
            "transfer"
          ],
          "type": "string",
          "description": "A list of products that an institution can support. All Items must be initialized with at least one product. The Balance product is always available and does not need to be specified during initialization.",
          "examples": [
            "auth"
          ]
        },
        "ProductStatus": {
          "title": "ProductStatus",
          "required": [
            "breakdown"
          ],
          "type": "object",
          "properties": {
            "breakdown": {
              "$ref": "#/components/schemas/StatusBreakdown"
            }
          },
          "description": "A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object."
        },
        "StatusBreakdown": {
          "title": "StatusBreakdown",
          "required": [
            "success",
            "error_plaid",
            "error_institution"
          ],
          "type": "object",
          "properties": {
            "success": {
              "type": "number",
              "description": "The percentage of login attempts that are successful, expressed as a decimal."
            },
            "error_plaid": {
              "type": "number",
              "description": "The percentage of logins that are failing due to an internal Plaid issue, expressed as a decimal."
            },
            "error_institution": {
              "type": "number",
              "description": "The percentage of logins that are failing due to an issue in the institution's system, expressed as a decimal."
            },
            "refresh_interval": {
              "$ref": "#/components/schemas/RefreshInterval"
            }
          },
          "description": "A detailed breakdown of the institution's performance for a request type. The values for `success`, `error_plaid`, and `error_institution` sum to 1."
        },
        "UserCustomPassword": {
          "title": "UserCustomPassword",
          "required": [
            "seed",
            "override_accounts",
            "mfa",
            "recaptcha",
            "force_error"
          ],
          "type": "object",
          "properties": {
            "version": {
              "type": [
                "string",
                "null"
              ],
              "description": "The version of the password schema to use, possible values are 1 or 2. The default value is 2. You should only specify 1 if you know it is necessary for your test suite."
            },
            "seed": {
              "type": "string",
              "description": "A seed, in the form of a string, that will be used to randomly generate account and transaction data, if this data is not specified using the `override_accounts` argument. If no seed is specified, the randomly generated data will be different each time.\n\nNote that transactions data is generated relative to the Item's creation date. Different Items created on different dates with the same seed for transactions data will have different dates for the transactions. The number of days between each transaction and the Item creation will remain constant. For example, an Item created on December 15 might show a transaction on December 14. An Item created on December 20, using the same seed, would show that same transaction occurring on December 19."
            },
            "override_accounts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OverrideAccounts"
              },
              "description": "An array of account overrides to configure the accounts for the Item. By default, if no override is specified, transactions and account data will be randomly generated based on the account type and subtype, and other products will have fixed or empty data."
            },
            "mfa": {
              "$ref": "#/components/schemas/MFA"
            },
            "recaptcha": {
              "type": "string",
              "description": "You may trigger a reCAPTCHA in Plaid Link in the Sandbox environment by using the recaptcha field. Possible values are `good` or `bad`. A value of `good` will result in successful Item creation and `bad` will result in a `RECAPTCHA_BAD` error to simulate a failed reCAPTCHA. Both values require the reCAPTCHA to be manually solved within Plaid Link."
            },
            "force_error": {
              "type": "string",
              "description": "An error code to force on Item creation. Possible values are:\n\n`\"INSTITUTION_NOT_RESPONDING\"`\n`\"INSTITUTION_NO_LONGER_SUPPORTED\"`\n`\"INVALID_CREDENTIALS\"`\n`\"INVALID_MFA\"`\n`\"ITEM_LOCKED\"`\n`\"ITEM_LOGIN_REQUIRED\"`\n`\"ITEM_NOT_SUPPORTED\"`\n`\"INVALID_LINK_TOKEN\"`\n`\"MFA_NOT_SUPPORTED\"`\n`\"NO_ACCOUNTS\"`\n`\"PLAID_ERROR\"`\n`\"PRODUCTS_NOT_SUPPORTED\"`\n`\"USER_SETUP_REQUIRED\"`"
            }
          },
          "description": "Custom test accounts are configured with a JSON configuration object formulated according to the schema below. All fields are optional. Sending an empty object as a configuration will result in an account configured with random balances and transaction history."
        },
        "MFA": {
          "title": "MFA",
          "required": [
            "type",
            "question_rounds",
            "questions_per_round",
            "selection_rounds",
            "selections_per_question"
          ],
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Possible values are `device`, `selections`, or `questions`.\n\nIf value is `device`, the MFA answer is `1234`.\n\nIf value is `selections`, the MFA answer is always the first option.\n\nIf value is `questions`, the MFA answer is  `answer_<i>_<j>` for the j-th question in the i-th round, starting from 0. For example, the answer to the first question in the second round is `answer_1_0`."
            },
            "question_rounds": {
              "type": "number",
              "description": "Number of rounds of questions. Required if value of `type` is `questions`."
            },
            "questions_per_round": {
              "type": "number",
              "description": "Number of questions per round. Required if value of `type` is `questions`. If value of type is `selections`, default value is 2."
            },
            "selection_rounds": {
              "type": "number",
              "description": "Number of rounds of selections, used if `type` is `selections`. Defaults to 1."
            },
            "selections_per_question": {
              "type": "number",
              "description": "Number of available answers per question, used if `type` is `selection`. Defaults to 2."
            }
          },
          "description": "Specifies the multi-factor authentication settings to use with this test account"
        },
        "OverrideAccounts": {
          "title": "OverrideAccounts",
          "required": [
            "type",
            "subtype",
            "starting_balance",
            "force_available_balance",
            "currency",
            "meta",
            "numbers",
            "transactions",
            "identity"
          ],
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/OverrideAccountType"
            },
            "subtype": {
              "$ref": "#/components/schemas/AccountSubtype"
            },
            "starting_balance": {
              "type": "number",
              "description": "If provided, the account will start with this amount as the current balance."
            },
            "force_available_balance": {
              "type": "number",
              "description": "If provided, the account will always have this amount as its  available balance, regardless of current balance or changes in transactions over time."
            },
            "currency": {
              "type": "string",
              "description": "ISO-4217 currency code. If provided, the account will be denominated in the given currency. Transactions will also be in this currency by default."
            },
            "meta": {
              "$ref": "#/components/schemas/Meta"
            },
            "numbers": {
              "$ref": "#/components/schemas/Numbers"
            },
            "transactions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TransactionOverride"
              },
              "description": "Specify the list of transactions on the account."
            },
            "identity": {
              "$ref": "#/components/schemas/OwnerOverride"
            }
          },
          "description": "Data to use to set values of test accounts. Some values cannot be specified in the schema and will instead will be calculated from other test data in order to achieve more consistent, realistic test data."
        },
        "Meta": {
          "title": "Meta",
          "required": [
            "name",
            "official_name",
            "limit"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The account's name"
            },
            "official_name": {
              "type": "string",
              "description": "The account's official name"
            },
            "limit": {
              "type": "number",
              "description": "The account's limit"
            }
          },
          "description": "Allows specifying the metadata of the test account"
        },
        "Numbers": {
          "title": "Numbers",
          "type": "object",
          "properties": {
            "account": {
              "type": "string",
              "description": "Will be used for the account number."
            },
            "ach_routing": {
              "type": "string",
              "description": "Must be a valid ACH routing number."
            },
            "ach_wire_routing": {
              "type": "string",
              "description": "Must be a valid wire transfer routing number."
            },
            "eft_institution": {
              "type": "string",
              "description": "EFT institution number. Must be specified alongside `eft_branch`."
            },
            "eft_branch": {
              "type": "string",
              "description": "EFT branch number. Must be specified alongside `eft_institution`."
            },
            "international_bic": {
              "type": "string",
              "description": "Bank identifier code (BIC). Must be specified alongside `international_iban`."
            },
            "international_iban": {
              "type": "string",
              "description": "International bank account number (IBAN). If no account number is specified via `account`, will also be used as the account number by default. Must be specified alongside `international_bic`."
            },
            "bacs_sort_code": {
              "type": "string",
              "description": "BACS sort code"
            }
          },
          "description": "Account and bank identifier number data used to configure the test account. All values are optional."
        },
        "TransactionOverride": {
          "title": "TransactionOverride",
          "required": [
            "date_transacted",
            "date_posted",
            "amount",
            "description"
          ],
          "type": "object",
          "properties": {
            "date_transacted": {
              "type": "string",
              "description": "The date of the transaction, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format. Transactions in Sandbox will move from pending to posted once their transaction date has been reached.",
              "contentEncoding": "date"
            },
            "date_posted": {
              "type": "string",
              "description": "The date the transaction posted, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format. Posted dates in the past or present will result in posted transactions; posted dates in the future will result in pending transactions.",
              "contentEncoding": "date"
            },
            "amount": {
              "type": "number",
              "description": "The transaction amount. Can be negative."
            },
            "description": {
              "type": "string",
              "description": "The transaction description."
            },
            "currency": {
              "type": "string",
              "description": "The ISO-4217 format currency code for the transaction."
            }
          },
          "description": "Data to populate as test transaction data. If not specified, random transactions will be generated instead."
        },
        "Recaptcha_RequiredError": {
          "title": "Recaptcha_RequiredError",
          "required": [
            "error_type",
            "error_code",
            "display_message",
            "http_code",
            "link_user_experience",
            "common_causes",
            "troubleshooting_steps"
          ],
          "type": "object",
          "properties": {
            "error_type": {
              "type": "string",
              "description": "RECAPTCHA_ERROR"
            },
            "error_code": {
              "type": "string",
              "description": "RECAPTCHA_REQUIRED"
            },
            "display_message": {
              "type": "string"
            },
            "http_code": {
              "type": "string",
              "description": "400"
            },
            "link_user_experience": {
              "type": "string",
              "description": "Your user will be prompted to solve a Google reCAPTCHA challenge in the Link Recaptcha pane. If they solve the challenge successfully, the user's request is resubmitted and they are directed to the next Item creation step."
            },
            "common_causes": {
              "type": "string",
              "description": "Plaid's fraud system detects abusive traffic and considers a variety of parameters throughout Item creation requests. When a request is considered risky or possibly fraudulent, Link presents a reCAPTCHA for the user to solve."
            },
            "troubleshooting_steps": {
              "type": "string",
              "description": "Link will automatically guide your user through reCAPTCHA verification. As a general rule, we recommend instrumenting basic fraud monitoring to detect and protect your website from spam and abuse.\n\nIf your user cannot verify their session, please submit a Support ticket with the following identifiers: `link_session_id` or `request_id`"
            }
          },
          "description": "The request was flagged by Plaid's fraud system, and requires additional verification to ensure they are not a bot."
        },
        "Cause": {
          "title": "Cause",
          "required": [
            "item_id",
            "error"
          ],
          "type": "object",
          "properties": {
            "item_id": {
              "type": "string",
              "description": "The `item_id` of the Item associated with this webhook, warning, or error"
            },
            "error": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "description": "An error object and associated `item_id` used to identify a specific Item and error when a batch operation operating on multiple Items has encountered an error in one of the Items."
        },
        "StandaloneCurrencyCodeList": {
          "title": "StandaloneCurrencyCodeList",
          "required": [
            "iso_currency_code",
            "unofficial_currency_code"
          ],
          "type": "object",
          "properties": {
            "iso_currency_code": {
              "type": "string",
              "description": "Plaid supports all ISO 4217 currency codes."
            },
            "unofficial_currency_code": {
              "$ref": "#/components/schemas/UnofficialCurrencyCodeList"
            }
          },
          "description": "The following currency codes are supported by Plaid."
        },
        "UnofficialCurrencyCodeList": {
          "title": "UnofficialCurrencyCodeList",
          "required": [
            "ADA",
            "BAT",
            "BCH",
            "BNB",
            "BTC",
            "BTG",
            "CNH",
            "DASH",
            "DOGE",
            "ETC",
            "ETH",
            "GBX",
            "LSK",
            "NEO",
            "OMG",
            "QTUM",
            "USDT",
            "XLM",
            "XMR",
            "XRP",
            "ZEC",
            "ZRX"
          ],
          "type": "object",
          "properties": {
            "ADA": {
              "type": "string",
              "description": "Cardano"
            },
            "BAT": {
              "type": "string",
              "description": "Basic Attention Token"
            },
            "BCH": {
              "type": "string",
              "description": "Bitcoin Cash"
            },
            "BNB": {
              "type": "string",
              "description": "Binance Coin"
            },
            "BTC": {
              "type": "string",
              "description": "Bitcoin"
            },
            "BTG": {
              "type": "string",
              "description": "Bitcoin Gold"
            },
            "BSV": {
              "type": "string",
              "description": "Bitcoin Satoshi Vision"
            },
            "CNH": {
              "type": "string",
              "description": "Chinese Yuan (offshore)"
            },
            "DASH": {
              "type": "string",
              "description": "Dash"
            },
            "DOGE": {
              "type": "string",
              "description": "Dogecoin"
            },
            "ETC": {
              "type": "string",
              "description": "Ethereum Classic"
            },
            "ETH": {
              "type": "string",
              "description": "Ethereum"
            },
            "GBX": {
              "type": "string",
              "description": "Pence sterling, i.e. British penny"
            },
            "LSK": {
              "type": "string",
              "description": "Lisk"
            },
            "NEO": {
              "type": "string",
              "description": "Neo"
            },
            "OMG": {
              "type": "string",
              "description": "OmiseGO"
            },
            "QTUM": {
              "type": "string",
              "description": "Qtum"
            },
            "USDT": {
              "type": "string",
              "description": "TehterUS"
            },
            "XLM": {
              "type": "string",
              "description": "Stellar Lumen"
            },
            "XMR": {
              "type": "string",
              "description": "Monero"
            },
            "XRP": {
              "type": "string",
              "description": "Ripple"
            },
            "ZEC": {
              "type": "string",
              "description": "Zcash"
            },
            "ZRX": {
              "type": "string",
              "description": "0x"
            }
          },
          "description": "List of unofficial currency codes"
        },
        "StandaloneAccountType": {
          "title": "StandaloneAccountType",
          "required": [
            "depository",
            "credit",
            "loan",
            "investment",
            "other"
          ],
          "type": "object",
          "properties": {
            "depository": {
              "$ref": "#/components/schemas/DepositoryAccount"
            },
            "credit": {
              "$ref": "#/components/schemas/CreditAccount"
            },
            "loan": {
              "$ref": "#/components/schemas/LoanAccount"
            },
            "investment": {
              "$ref": "#/components/schemas/InvestmentAccountSubtype"
            },
            "other": {
              "type": "string",
              "description": "Other or unknown account type. Supported products for `other` accounts are: Balance, Transactions, Identity, and Assets."
            }
          },
          "description": "The schema below describes the various `types` and corresponding `subtypes` that Plaid recognizes and reports for financial institution accounts."
        },
        "DepositoryAccount": {
          "title": "DepositoryAccount",
          "required": [
            "checking",
            "savings",
            "hsa",
            "cd",
            "money market",
            "paypal",
            "prepaid",
            "cash management",
            "ebt"
          ],
          "type": "object",
          "properties": {
            "checking": {
              "type": "string",
              "description": "Checking account"
            },
            "savings": {
              "type": "string",
              "description": "Savings account"
            },
            "hsa": {
              "type": "string",
              "description": "Health Savings Account (US only) that can only hold cash"
            },
            "cd": {
              "type": "string",
              "description": "Certificate of deposit account"
            },
            "money market": {
              "type": "string",
              "description": "Money market account"
            },
            "paypal": {
              "type": "string",
              "description": "PayPal depository account"
            },
            "prepaid": {
              "type": "string",
              "description": "Prepaid debit card"
            },
            "cash management": {
              "type": "string",
              "description": "A cash management account, typically a cash account at a brokerage"
            },
            "ebt": {
              "type": "string",
              "description": "An Electronic Benefit Transfer (EBT) account, used by certain public assistance programs to distribute funds (US only)"
            }
          },
          "description": "An account type holding cash, in which funds are deposited. Supported products for `depository` accounts are: Auth, Balance, Transactions, Identity, Payment Initiation, and Assets."
        },
        "CreditAccount": {
          "title": "CreditAccount",
          "required": [
            "credit card",
            "paypal"
          ],
          "type": "object",
          "properties": {
            "credit card": {
              "type": "string",
              "description": "Bank-issued credit card"
            },
            "paypal": {
              "type": "string",
              "description": "PayPal-issued credit card"
            }
          },
          "description": "A credit card type account. Supported products for `credit` accounts are: Balance, Transactions, Identity, and Liabilities."
        },
        "LoanAccount": {
          "title": "LoanAccount",
          "required": [
            "auto",
            "business",
            "commercial",
            "construction",
            "consumer",
            "home equity",
            "loan",
            "mortgage",
            "overdraft",
            "line of credit",
            "student",
            "other"
          ],
          "type": "object",
          "properties": {
            "auto": {
              "type": "string",
              "description": "Auto loan"
            },
            "business": {
              "type": "string",
              "description": "Business loan"
            },
            "commercial": {
              "type": "string",
              "description": "Commercial loan"
            },
            "construction": {
              "type": "string",
              "description": "Construction loan"
            },
            "consumer": {
              "type": "string",
              "description": "Consumer loan"
            },
            "home equity": {
              "type": "string",
              "description": "Home Equity Line of Credit (HELOC)"
            },
            "loan": {
              "type": "string",
              "description": "General loan"
            },
            "mortgage": {
              "type": "string",
              "description": "Mortgage loan"
            },
            "overdraft": {
              "type": "string",
              "description": "Pre-approved overdraft account, usually tied to a checking account"
            },
            "line of credit": {
              "type": "string",
              "description": "Pre-approved line of credit"
            },
            "student": {
              "type": "string",
              "description": "Student loan"
            },
            "other": {
              "type": "string",
              "description": "Other loan type or unknown loan type"
            }
          },
          "description": "A loan type account. Supported products for `loan` accounts are: Balance, Liabilities, and Transactions."
        },
        "InvestmentAccountSubtype": {
          "title": "InvestmentAccountSubtype",
          "required": [
            "529",
            "401a",
            "401k",
            "403B",
            "457b",
            "brokerage",
            "cash isa",
            "education savings account",
            "fixed annuity",
            "gic",
            "health reimbursement arrangement",
            "hsa",
            "ira",
            "isa",
            "keogh",
            "lif",
            "life insurance",
            "lira",
            "lrif",
            "lrsp",
            "mutual fund",
            "non-taxable brokerage account",
            "other",
            "other annuity",
            "other insurance",
            "pension",
            "prif",
            "profit sharing plan",
            "qshr",
            "rdsp",
            "resp",
            "retirement",
            "rlif",
            "roth",
            "roth 401k",
            "rrif",
            "rrsp",
            "sarsep",
            "sep ira",
            "simple ira",
            "sipp",
            "stock plan",
            "tfsa",
            "trust",
            "ugma",
            "utma",
            "variable annuity"
          ],
          "type": "object",
          "properties": {
            "529": {
              "type": "string",
              "description": "Tax-advantaged college savings and prepaid tuition 529 plans (US)"
            },
            "401a": {
              "type": "string",
              "description": "Employer-sponsored money-purchase 401(a) retirement plan (US)"
            },
            "401k": {
              "type": "string",
              "description": "Standard 401(k) retirement account (US)"
            },
            "403B": {
              "type": "string",
              "description": "403(b) retirement savings account for non-profits and schools (US)"
            },
            "457b": {
              "type": "string",
              "description": "Tax-advantaged deferred-compensation 457(b) retirement plan for governments and non-profits (US)"
            },
            "brokerage": {
              "type": "string",
              "description": "Standard brokerage account"
            },
            "cash isa": {
              "type": "string",
              "description": "Individual Savings Account (ISA) that pays interest tax-free (UK)"
            },
            "education savings account": {
              "type": "string",
              "description": "Tax-advantaged Coverdell Education Savings Account (ESA) (US)"
            },
            "fixed annuity": {
              "type": "string",
              "description": "Fixed annuity"
            },
            "gic": {
              "type": "string",
              "description": "Guaranteed Investment Certificate (Canada)"
            },
            "health reimbursement arrangement": {
              "type": "string",
              "description": "Tax-advantaged Health Reimbursement Arrangement (HRA) benefit plan (US)"
            },
            "hsa": {
              "type": "string",
              "description": "Non-cash tax-advantaged medical Health Savings Account (HSA) (US)"
            },
            "ira": {
              "type": "string",
              "description": "Traditional Invididual Retirement Account (IRA) (US)"
            },
            "isa": {
              "type": "string",
              "description": "Non-cash Individual Savings Account (ISA) (UK)"
            },
            "keogh": {
              "type": "string",
              "description": "Keogh self-employed retirement plan (US)"
            },
            "lif": {
              "type": "string",
              "description": "Life Income Fund (LIF) retirement account (Canada)"
            },
            "life insurance": {
              "type": "string",
              "description": "Life insurance account"
            },
            "lira": {
              "type": "string",
              "description": "Locked-in Retirement Account (LIRA) (Canada)"
            },
            "lrif": {
              "type": "string",
              "description": "Locked-in Retirement Income Fund (LRIF) (Canada)"
            },
            "lrsp": {
              "type": "string",
              "description": "Locked-in Retirement Savings Plan (Canada)"
            },
            "mutual fund": {
              "type": "string",
              "description": "Mutual fund account"
            },
            "non-taxable brokerage account": {
              "type": "string",
              "description": "A non-taxable brokerage account that is not covered by a more specific subtype"
            },
            "other": {
              "type": "string",
              "description": "An account whose type could not be determined"
            },
            "other annuity": {
              "type": "string",
              "description": "An annuity account not covered by other subtypes"
            },
            "other insurance": {
              "type": "string",
              "description": "An insurance account not covered by other subtypes"
            },
            "pension": {
              "type": "string",
              "description": "Standard pension account"
            },
            "prif": {
              "type": "string",
              "description": "Prescribed Registered Retirement Income Fund (Canada)"
            },
            "profit sharing plan": {
              "type": "string",
              "description": "Plan that gives employees share of company profits"
            },
            "qshr": {
              "type": "string",
              "description": "Qualifying share account"
            },
            "rdsp": {
              "type": "string",
              "description": "Registered Disability Savings Plan (RSDP) (Canada)"
            },
            "resp": {
              "type": "string",
              "description": "Registered Education Savings Plan (Canada)"
            },
            "retirement": {
              "type": "string",
              "description": "Retirement account not covered by other subtypes"
            },
            "rlif": {
              "type": "string",
              "description": "Restricted Life Income Fund (RLIF) (Canada)"
            },
            "roth": {
              "type": "string",
              "description": "Roth IRA (US)"
            },
            "roth 401k": {
              "type": "string",
              "description": "Employer-sponsored Roth 401(k) plan (US)"
            },
            "rrif": {
              "type": "string",
              "description": "Registered Retirement Income Fund (RRIF) (Canada)"
            },
            "rrsp": {
              "type": "string",
              "description": "Registered Retirement Savings Plan (Canadian, similar to US 401(k))"
            },
            "sarsep": {
              "type": "string",
              "description": "Salary Reduction Simplified Employee Pension Plan (SARSEP), discontinued retirement plan (US)"
            },
            "sep ira": {
              "type": "string",
              "description": "Simplified Employee Pension IRA (SEP IRA), retirement plan for small businesses and self-employed (US)"
            },
            "simple ira": {
              "type": "string",
              "description": "Savings Incentive Match Plan for Employees IRA, retirement plan for small businesses (US)"
            },
            "sipp": {
              "type": "string",
              "description": "Self-Invested Personal Pension (SIPP) (UK)"
            },
            "stock plan": {
              "type": "string",
              "description": "Standard stock plan account"
            },
            "tfsa": {
              "type": "string",
              "description": "Tax-Free Savings Account (TFSA), a retirement plan similar to a Roth IRA (Canada)"
            },
            "trust": {
              "type": "string",
              "description": "Account representing funds or assets held by a trustee for the benefit of a beneficiary. Includes both revocable and irrevocable trusts."
            },
            "ugma": {
              "type": "string",
              "description": "'Uniform Gift to Minors Act' (brokerage account for minors, US)"
            },
            "utma": {
              "type": "string",
              "description": "'Uniform Transfers to Minors Act' (brokerage account for minors, US)"
            },
            "variable annuity": {
              "type": "string",
              "description": "Tax-deferred capital accumulation annuity contract"
            }
          },
          "description": "An investment account. Supported products for `investment` accounts are: Balance and Investments. In API versions 2018-05-22 and earlier, this type is called `brokerage`."
        },
        "ACHClass": {
          "title": "ACHClass",
          "enum": [
            "arc",
            "cbr",
            "ccd",
            "cie",
            "cor",
            "ctx",
            "iat",
            "mte",
            "pbr",
            "pop",
            "pos",
            "ppd",
            "rck",
            "tel",
            "web"
          ],
          "type": "string",
          "description": "Specifies the use case of the transfer.  Required for transfers on an ACH network.\n\n`\"arc\"` - Accounts Receivable Entry\n\n`\"cbr`\" - Cross Border Entry\n\n`\"ccd\"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts\n\n`\"cie\"` - Customer Initiated Entry\n\n`\"cor\"` - Automated Notification of Change\n\n`\"ctx\"` - Corporate Trade Exchange\n\n`\"iat\"` - International\n\n`\"mte\"` - Machine Transfer Entry\n\n`\"pbr\"` - Cross Border Entry\n\n`\"pop\"` - Point-of-Purchase Entry\n\n`\"pos\"` - Point-of-Sale Entry\n\n`\"ppd\"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment\n\n`\"rck\"` - Re-presented Check Entry\n\n`\"tel\"` - Telephone-Initiated Entry\n\n`\"web\"` - Internet-Initiated Entry - debits from a consumer’s account where their authorization is obtained over the Internet",
          "examples": [
            "arc"
          ]
        },
        "AccountFiltersResponse": {
          "title": "AccountFiltersResponse",
          "type": "object",
          "properties": {
            "depository": {
              "$ref": "#/components/schemas/DepositoryFilter"
            },
            "credit": {
              "$ref": "#/components/schemas/CreditFilter"
            }
          },
          "description": "The `account_filters` specified in the original call to `/link/token/create`."
        },
        "InstitutionsSearchAccountFilter": {
          "title": "InstitutionsSearchAccountFilter",
          "type": "object",
          "properties": {
            "loan": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccountSubtype"
              },
              "description": ""
            },
            "depository": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccountSubtype"
              },
              "description": ""
            },
            "credit": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccountSubtype"
              },
              "description": ""
            },
            "investment": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccountSubtype"
              },
              "description": ""
            }
          }
        },
        "AccountIdentity": {
          "title": "AccountIdentity",
          "required": [
            "account_id",
            "balances",
            "mask",
            "name",
            "official_name",
            "type",
            "subtype",
            "owners"
          ],
          "type": "object",
          "properties": {
            "account_id": {
              "type": "string",
              "description": "Plaid’s unique identifier for the account. This value will not change unless Plaid can't reconcile the account with the data returned by the financial institution. This may occur, for example, when the name of the account changes. If this happens a new `account_id` will be assigned to the account.\n\nThe `account_id` can also change if the `access_token` is deleted and the same credentials that were used to generate that `access_token` are used to generate a new `access_token` on a later date. In that case, the new `account_id` will be different from the old `account_id`.\n\nIf an account with a specific `account_id` disappears instead of changing, the account is likely closed. Closed accounts are not returned by the Plaid API.\n\nLike all Plaid identifiers, the `account_id` is case sensitive."
            },
            "balances": {
              "$ref": "#/components/schemas/AccountBalance"
            },
            "mask": {
              "type": [
                "string",
                "null"
              ],
              "description": "The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts, and it may also not match the mask that the bank displays to the user."
            },
            "name": {
              "type": "string",
              "description": "The name of the account, either assigned by the user or by the financial institution itself"
            },
            "official_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The official name of the account as given by the financial institution"
            },
            "type": {
              "$ref": "#/components/schemas/AccountType"
            },
            "subtype": {
              "$ref": "#/components/schemas/AccountSubtype"
            },
            "verification_status": {
              "$ref": "#/components/schemas/VerificationStatus"
            },
            "owners": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Owner"
              },
              "description": "Data returned by the financial institution about the account owner or owners. Only returned by Identity or Assets endpoints. Multiple owners on a single account will be represented in the same `owner` object, not in multiple owner objects within the array. In API versions 2018-05-22 and earlier, the `owners` object is not returned, and instead identity information is returned in the top level `identity` object. For more details, see [Plaid API versioning](https://plaid.com/docs/api/versioning/#version-2019-05-29)"
            }
          }
        },
        "DepositoryFilter": {
          "title": "DepositoryFilter",
          "required": [
            "account_subtypes"
          ],
          "type": "object",
          "properties": {
            "account_subtypes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccountSubtype"
              },
              "description": "An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#accounts-schema)."
            }
          },
          "description": "A filter to apply to `depository`-type accounts"
        },
        "CreditFilter": {
          "title": "CreditFilter",
          "required": [
            "account_subtypes"
          ],
          "type": "object",
          "properties": {
            "account_subtypes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccountSubtype"
              },
              "description": "An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#accounts-schema)."
            }
          },
          "description": "A filter to apply to `credit`-type accounts"
        },
        "HealthIncident": {
          "title": "HealthIncident",
          "required": [
            "start_date",
            "title",
            "incident_updates"
          ],
          "type": "object",
          "properties": {
            "start_date": {
              "type": "string",
              "description": "The start date of the incident, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2020-10-30T15:26:48Z\"`.",
              "contentEncoding": "date-time"
            },
            "end_date": {
              "type": "string",
              "description": "The end date of the incident, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2020-10-30T15:26:48Z\"`.",
              "contentEncoding": "date-time"
            },
            "title": {
              "type": "string",
              "description": "The title of the incident"
            },
            "incident_updates": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IncidentUpdate"
              },
              "description": "Updates on the health incident."
            }
          }
        },
        "IncidentUpdate": {
          "title": "IncidentUpdate",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "The content of the update."
            },
            "status": {
              "$ref": "#/components/schemas/Status"
            },
            "updated_date": {
              "type": "string",
              "description": "The date when the update was published, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2020-10-30T15:26:48Z\"`.",
              "contentEncoding": "date-time"
            }
          }
        },
        "Application": {
          "title": "Application",
          "required": [
            "application_id",
            "name",
            "created_at",
            "logo_url",
            "application_url",
            "reason_for_access"
          ],
          "type": "object",
          "properties": {
            "application_id": {
              "type": "string",
              "description": "This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect."
            },
            "name": {
              "type": "string",
              "description": "The name of the application"
            },
            "created_at": {
              "type": "string",
              "description": "The date this application was linked in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format in UTC.",
              "contentEncoding": "date"
            },
            "logo_url": {
              "type": [
                "string",
                "null"
              ],
              "description": "A URL that links to the application logo image."
            },
            "application_url": {
              "type": [
                "string",
                "null"
              ],
              "description": "The URL for the application's website"
            },
            "reason_for_access": {
              "type": [
                "string",
                "null"
              ],
              "description": "A string provided by the connected app stating why they use their respective enabled products."
            }
          },
          "description": "Metadata about the application"
        },
        "ApplicationGetRequest": {
          "title": "ApplicationGetRequest",
          "required": [
            "client_id",
            "secret",
            "application_id"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "examples": [
                "5fd43aad1186c30013d6f3e2"
              ]
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "application_id": {
              "type": "string",
              "description": "This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect."
            }
          },
          "description": "ApplicationGetResponse defines the schema for `/application/get`"
        },
        "ApplicationGetResponse": {
          "title": "ApplicationGetResponse",
          "required": [
            "request_id",
            "application"
          ],
          "type": "object",
          "properties": {
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            },
            "application": {
              "$ref": "#/components/schemas/Application"
            }
          },
          "description": "The request ID associated with this call."
        },
        "ProductAccess": {
          "title": "ProductAccess",
          "type": "object",
          "properties": {
            "statements": {
              "type": [
                "boolean",
                "null"
              ],
              "description": "Allow access to statements. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
              "default": true
            },
            "identity": {
              "type": [
                "boolean",
                "null"
              ],
              "description": "Allow access to the Identity product (name, email, phone, address). Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
              "default": true
            },
            "auth": {
              "type": [
                "boolean",
                "null"
              ],
              "description": "Allow access to account number details. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
              "default": true
            },
            "transactions": {
              "type": [
                "boolean",
                "null"
              ],
              "description": "Allow access to transaction details. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
              "default": true
            }
          },
          "description": "The product access being requested. Used to or disallow product access across all accounts. If unset, defaults to all products allowed."
        },
        "AccountAccess": {
          "title": "AccountAccess",
          "required": [
            "unique_id"
          ],
          "type": "object",
          "properties": {
            "unique_id": {
              "type": "string",
              "description": "The unique account identifier for this account. This value must match that returned by the data access API for this account."
            },
            "authorized": {
              "type": [
                "boolean",
                "null"
              ],
              "description": "Allow the application to see this account (and associated details, including balance) in the list of accounts  If unset, defaults to `true`.",
              "default": true
            }
          },
          "description": "Allow or disallow product access by account. Unlisted (e.g. missing) accounts will be considered `new_accounts`."
        },
        "AccountProductAccess": {
          "title": "AccountProductAccess",
          "type": "object",
          "properties": {
            "account_data": {
              "type": [
                "boolean",
                "null"
              ],
              "description": "Allow the application to access account data. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
              "default": true
            },
            "statements": {
              "type": [
                "boolean",
                "null"
              ],
              "description": "Allow the application to access bank statements. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
              "default": true
            },
            "tax_documents": {
              "type": [
                "boolean",
                "null"
              ],
              "description": "Allow the application to access tax documents. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
              "default": true
            }
          },
          "description": "Allow the application to access specific products on this account"
        },
        "Scopes": {
          "title": "Scopes",
          "type": "object",
          "properties": {
            "product_access": {
              "$ref": "#/components/schemas/ProductAccess"
            },
            "accounts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccountAccess"
              },
              "description": ""
            },
            "new_accounts": {
              "type": [
                "boolean",
                "null"
              ],
              "description": "Allow access to newly opened accounts as they are opened. If unset, defaults to `true`.",
              "default": true
            }
          },
          "description": "The scopes object"
        },
        "RequestedScopes": {
          "title": "RequestedScopes",
          "required": [
            "required_product_access",
            "optional_product_access",
            "account_selection_cardinality"
          ],
          "type": "object",
          "properties": {
            "required_product_access": {
              "$ref": "#/components/schemas/ProductAccess"
            },
            "optional_product_access": {
              "$ref": "#/components/schemas/ProductAccess"
            },
            "account_filters": {
              "$ref": "#/components/schemas/AccountFilter"
            },
            "account_selection_cardinality": {
              "$ref": "#/components/schemas/AccountSelectionCardinality"
            }
          },
          "description": "Scope of required and optional account features or content from a ConnectedApplication."
        },
        "ScopesContext": {
          "title": "ScopesContext",
          "enum": [
            "ENROLLMENT",
            "PORTAL"
          ],
          "type": "string",
          "description": "An indicator for when scopes are being updated. When scopes are updated via enrollment (i.e. OAuth), the partner must send `ENROLLMENT`. When scopes are updated in a post-enrollment view, the partner must send `PORTAL`.",
          "examples": [
            "ENROLLMENT"
          ]
        },
        "ItemApplicationScopesUpdateRequest": {
          "title": "ItemApplicationScopesUpdateRequest",
          "required": [
            "access_token",
            "application_id",
            "scopes",
            "context"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            },
            "application_id": {
              "type": "string",
              "description": "This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect."
            },
            "scopes": {
              "$ref": "#/components/schemas/Scopes"
            },
            "state": {
              "type": "string",
              "description": "When scopes are updated during enrollment, this field must be populated with the state sent to the partner in the OAuth Login URI. This field is required when the context is `ENROLLMENT`."
            },
            "context": {
              "$ref": "#/components/schemas/ScopesContext"
            }
          },
          "description": "ItemApplicationScopesUpdateRequest defines the request schema for `/item/application/scopes/update`"
        },
        "ItemApplicationScopesUpdateResponse": {
          "title": "ItemApplicationScopesUpdateResponse",
          "required": [
            "request_id"
          ],
          "type": "object",
          "properties": {
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "ItemApplicationScopesUpdateResponse defines the response schema for `/item/application/scopes/update`"
        },
        "ItemApplicationListRequest": {
          "title": "ItemApplicationListRequest",
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "access_token": {
              "type": [
                "string",
                "null"
              ],
              "description": "The access token associated with the Item data is being requested for."
            }
          },
          "description": "Request to list connected applications for a user."
        },
        "ItemApplicationListResponse": {
          "title": "ItemApplicationListResponse",
          "required": [
            "applications"
          ],
          "type": "object",
          "properties": {
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            },
            "applications": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ConnectedApplication"
              },
              "description": "A list of connected applications."
            }
          },
          "description": "Describes the connected application for a particular end user."
        },
        "ConnectedApplication": {
          "title": "ConnectedApplication",
          "required": [
            "application_id",
            "name",
            "logo_url",
            "application_url",
            "reason_for_access",
            "created_at"
          ],
          "type": "object",
          "properties": {
            "application_id": {
              "type": "string",
              "description": "This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect."
            },
            "name": {
              "type": "string",
              "description": "The name of the application"
            },
            "logo_url": {
              "type": [
                "string",
                "null"
              ],
              "description": "A URL that links to the application logo image."
            },
            "application_url": {
              "type": [
                "string",
                "null"
              ],
              "description": "The URL for the application's website"
            },
            "reason_for_access": {
              "type": [
                "string",
                "null"
              ],
              "description": "A string provided by the connected app stating why they use their respective enabled products."
            },
            "created_at": {
              "type": "string",
              "description": "The date this application was linked in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format in UTC.",
              "contentEncoding": "date",
              "examples": [
                "2020-01-01"
              ]
            },
            "requested_scopes": {
              "$ref": "#/components/schemas/RequestedScopes"
            }
          },
          "description": "Describes the connected application for a particular end user."
        },
        "AccountSelectionCardinality": {
          "title": "AccountSelectionCardinality",
          "enum": [
            "SINGLE_SELECT",
            "MULTI_SELECT",
            "ALL"
          ],
          "type": "string",
          "description": "The application requires that accounts be limited to a specific cardinality.\n`MULTI_SELECT`: indicates that the user should be allowed to pick multiple accounts.\n`SINGLE_SELECT`: indicates that the user should be allowed to pick only a single account.\n`ALL`: indicates that the user must share all of their accounts and should not be given the opportunity to de-select",
          "examples": [
            "SINGLE_SELECT"
          ]
        },
        "AccountFilter": {
          "title": "AccountFilter",
          "type": "object",
          "properties": {
            "depository": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of account subtypes to be filtered."
            },
            "credit": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of account subtypes to be filtered."
            },
            "loan": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of account subtypes to be filtered."
            },
            "investment": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of account subtypes to be filtered."
            }
          },
          "description": "Enumerates the account subtypes that the application wishes for the user to be able to select from. For more details refer to Plaid documentation on account filters."
        },
        "SignalEvaluateRequest": {
          "title": "SignalEvaluateRequest",
          "required": [
            "access_token",
            "account_id",
            "client_transaction_id",
            "amount"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "access_token": {
              "type": "string",
              "description": "The access token associated with the Item data is being requested for."
            },
            "account_id": {
              "type": "string",
              "description": "The `account_id` of the account whose verification status is to be modified"
            },
            "client_transaction_id": {
              "maxLength": 36,
              "minLength": 1,
              "type": "string",
              "description": "The unique ID that you would like to use to refer to this transaction. For your convenience mapping your internal data, you could use your internal ID/identifier for this transaction. The max length for this field is 36 characters."
            },
            "amount": {
              "type": "number",
              "description": "The transaction amount, in USD (e.g. `102.05`)"
            },
            "user_present": {
              "type": [
                "boolean",
                "null"
              ],
              "description": "`true` if the end user is present while initiating the ACH transfer and the endpoint is being called; `false` otherwise (for example, when the ACH transfer is scheduled and the end user is not present, or you call this endpoint after the ACH transfer but before submitting the Nacha file for ACH processing)."
            },
            "client_user_id": {
              "maxLength": 36,
              "type": "string",
              "description": "A unique ID that identifies the end user in your system. This ID is used to correlate requests by a user with multiple Items. The max length for this field is 36 characters."
            },
            "user": {
              "$ref": "#/components/schemas/SignalUser"
            },
            "device": {
              "$ref": "#/components/schemas/SignalEvaluateDevice"
            }
          },
          "description": "SignalEvaluateRequest defines the request schema for `/signal/evaluate`"
        },
        "SignalUser": {
          "title": "SignalUser",
          "type": "object",
          "properties": {
            "name": {
              "$ref": "#/components/schemas/SignalPersonName"
            },
            "phone_number": {
              "type": [
                "string",
                "null"
              ],
              "description": "The user's phone number, in E.164 format: +{countrycode}{number}. For example: \"+14151234567\""
            },
            "email_address": {
              "type": [
                "string",
                "null"
              ],
              "description": "The user's email address."
            },
            "address": {
              "$ref": "#/components/schemas/AddressData1"
            }
          },
          "description": "Details about the end user initiating the transaction (i.e., the account holder)."
        },
        "SignalPersonName": {
          "title": "SignalPersonName",
          "type": "object",
          "properties": {
            "prefix": {
              "type": [
                "string",
                "null"
              ],
              "description": "The user's name prefix (e.g. \"Mr.\")"
            },
            "given_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The user's given name. If the user has a one-word name, it should be provided in this field."
            },
            "middle_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The user's middle name"
            },
            "family_name": {
              "type": [
                "string",
                "null"
              ],
              "description": "The user's family name / surname"
            },
            "suffix": {
              "type": [
                "string",
                "null"
              ],
              "description": "The user's name suffix (e.g. \"II\")"
            }
          },
          "description": "The user's legal name"
        },
        "AddressData1": {
          "title": "AddressData1",
          "type": "object",
          "properties": {
            "city": {
              "type": "string",
              "description": "The full city name"
            },
            "region": {
              "type": [
                "string",
                "null"
              ],
              "description": "The region or state\nExample: `\"NC\"`"
            },
            "street": {
              "type": "string",
              "description": "The full street address\nExample: `\"564 Main Street, APT 15\"`"
            },
            "postal_code": {
              "type": [
                "string",
                "null"
              ],
              "description": "The postal code"
            },
            "country": {
              "type": [
                "string",
                "null"
              ],
              "description": "The ISO 3166-1 alpha-2 country code"
            }
          },
          "description": "Data about the components comprising an address."
        },
        "SignalEvaluateDevice": {
          "title": "SignalEvaluateDevice",
          "type": "object",
          "properties": {
            "ip_address": {
              "type": [
                "string",
                "null"
              ],
              "description": "The IP address of the device that initiated the transaction"
            },
            "user_agent": {
              "type": [
                "string",
                "null"
              ],
              "description": "The user agent of the device that initiated the transaction (e.g. \"Mozilla/5.0\")"
            }
          },
          "description": "Details about the end user's device"
        },
        "SignalEvaluateResponse": {
          "title": "SignalEvaluateResponse",
          "required": [
            "request_id",
            "scores"
          ],
          "type": "object",
          "properties": {
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            },
            "scores": {
              "$ref": "#/components/schemas/SignalEvaluateScores"
            },
            "core_attributes": {
              "$ref": "#/components/schemas/SignalEvaluateCoreAttributes"
            }
          },
          "description": "SignalEvaluateResponse defines the response schema for `/signal/income/evaluate`"
        },
        "SignalEvaluateScores": {
          "title": "SignalEvaluateScores",
          "type": "object",
          "properties": {
            "customer_initiated_return_risk": {
              "$ref": "#/components/schemas/CustomerInitiatedReturnRisk"
            },
            "bank_initiated_return_risk": {
              "$ref": "#/components/schemas/BankInitiatedReturnRisk"
            }
          },
          "description": "Risk scoring details broken down by risk category."
        },
        "CustomerInitiatedReturnRisk": {
          "title": "CustomerInitiatedReturnRisk",
          "required": [
            "score",
            "risk_tier"
          ],
          "type": "object",
          "properties": {
            "score": {
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer",
              "description": "A score from 0-99 that indicates the transaction return risk: a higher risk score suggests a higher return likelihood.",
              "contentEncoding": "int32"
            },
            "risk_tier": {
              "maximum": 5.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "A tier corresponding to the projected likelihood that the transaction, if initiated, will be subject to a return.\n\nIn the `customer_initiated_return_risk` object, there are five risk tiers corresponding to the scores:\n  1: Predicted customer-initiated return incidence rate between 0.00% - 0.02%\n  2: Predicted customer-initiated return incidence rate between 0.02% - 0.05%\n  3: Predicted customer-initiated return incidence rate between 0.05% - 0.1%\n  4: Predicted customer-initiated return incidence rate between 0.1% - 0.5%\n  5: Predicted customer-initiated return incidence rate greater than 0.5%",
              "contentEncoding": "int32"
            }
          },
          "description": "The object contains a risk score and a risk tier that evaluate the transaction return risk of an unauthorized debit. Common return codes in this category include: “R05”, \"R07\", \"R10\", \"R11\", \"R29\". These returns typically have a return time frame of up to 60 calendar days. During this period, the customer of financial institutions can dispute a transaction as unauthorized."
        },
        "BankInitiatedReturnRisk": {
          "title": "BankInitiatedReturnRisk",
          "required": [
            "score",
            "risk_tier"
          ],
          "type": "object",
          "properties": {
            "score": {
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer",
              "description": "A score from 0-99 that indicates the transaction return risk: a higher risk score suggests a higher return likelihood.",
              "contentEncoding": "int32"
            },
            "risk_tier": {
              "maximum": 8.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "In the `bank_initiated_return_risk` object, there are eight risk tiers corresponding to the scores:\n  1: Predicted bank-initiated return incidence rate between 0.0% - 0.5%\n  2: Predicted bank-initiated return incidence rate between 0.5% - 1.5%\n  3: Predicted bank-initiated return incidence rate between 1.5% - 3%\n  4: Predicted bank-initiated return incidence rate between 3% - 5%\n  5: Predicted bank-initiated return incidence rate between 5% - 10%\n  6: Predicted bank-initiated return incidence rate between 10% - 15%\n  7: Predicted bank-initiated return incidence rate between 15% and 50%\n  8: Predicted bank-initiated return incidence rate greater than 50%",
              "contentEncoding": "int32"
            }
          },
          "description": "The object contains a risk score and a risk tier that evaluate the transaction return risk because an account is overdrawn or because an ineligible account is used. Common return codes in this category include: \"R01\", \"R02\", \"R03\", \"R04\", \"R06\", “R08”,  \"R09\", \"R13\", \"R16\", \"R17\", \"R20\", \"R23\". These returns have a turnaround time of 2 banking days."
        },
        "SignalEvaluateCoreAttributes": {
          "title": "SignalEvaluateCoreAttributes",
          "type": "object",
          "properties": {
            "unauthorized_transactions_count_7d": {
              "type": "integer",
              "description": "We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 7 days from the account that will be debited.",
              "contentEncoding": "int32"
            },
            "unauthorized_transactions_count_30d": {
              "type": "integer",
              "description": "We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 30 days from the account that will be debited.",
              "contentEncoding": "int32"
            },
            "unauthorized_transactions_count_60d": {
              "type": "integer",
              "description": "We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 60 days from the account that will be debited.",
              "contentEncoding": "int32"
            },
            "unauthorized_transactions_count_90d": {
              "type": "integer",
              "description": "We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 90 days from the account that will be debited.",
              "contentEncoding": "int32"
            },
            "nsf_overdraft_transactions_count_7d": {
              "type": "integer",
              "description": "We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 7 days from the account that will be debited.",
              "contentEncoding": "int32"
            },
            "nsf_overdraft_transactions_count_30d": {
              "type": "integer",
              "description": "We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 30 days from the account that will be debited.",
              "contentEncoding": "int32"
            },
            "nsf_overdraft_transactions_count_60d": {
              "type": "integer",
              "description": "We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 60 days from the account that will be debited.",
              "contentEncoding": "int32"
            },
            "nsf_overdraft_transactions_count_90d": {
              "type": "integer",
              "description": "We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 90 days from the account that will be debited.",
              "contentEncoding": "int32"
            },
            "days_since_first_plaid_connection": {
              "type": [
                "integer",
                "null"
              ],
              "description": "The number of days since the first time the Item was connected to an application via Plaid",
              "contentEncoding": "int32"
            },
            "plaid_connections_count_7d": {
              "type": [
                "integer",
                "null"
              ],
              "description": "The number of times the Item has been connected to applications via Plaid over the past 7 days",
              "contentEncoding": "int32"
            },
            "plaid_connections_count_30d": {
              "type": [
                "integer",
                "null"
              ],
              "description": "The number of times the Item has been connected to applications via Plaid over the past 30 days",
              "contentEncoding": "int32"
            },
            "total_plaid_connections_count": {
              "type": [
                "integer",
                "null"
              ],
              "description": "The total number of times the Item has been connected to applications via Plaid",
              "contentEncoding": "int32"
            },
            "is_savings_or_money_market_account": {
              "type": "boolean",
              "description": "Indicates if the ACH transaction funding account is a savings/money market account"
            },
            "total_credit_transactions_amount_10d": {
              "type": "number",
              "description": "The total credit (inflow) transaction amount over the past 10 days from the account that will be debited"
            },
            "total_debit_transactions_amount_10d": {
              "type": "number",
              "description": "The total debit (outflow) transaction amount over the past 10 days from the account that will be debited"
            },
            "p50_credit_transactions_amount_28d": {
              "type": [
                "number",
                "null"
              ],
              "description": "The 50th percentile of all credit (inflow) transaction amounts over the past 28 days from the account that will be debited"
            },
            "p50_debit_transactions_amount_28d": {
              "type": [
                "number",
                "null"
              ],
              "description": "The 50th percentile of all debit (outflow) transaction amounts over the past 28 days from the account that will be debited"
            },
            "p95_credit_transactions_amount_28d": {
              "type": [
                "number",
                "null"
              ],
              "description": "The 95th percentile of all credit (inflow) transaction amounts over the past 28 days from the account that will be debited"
            },
            "p95_debit_transactions_amount_28d": {
              "type": [
                "number",
                "null"
              ],
              "description": "The 95th percentile of all debit (outflow) transaction amounts over the past 28 days from the account that will be debited"
            },
            "days_with_negative_balance_count_90d": {
              "type": [
                "integer",
                "null"
              ],
              "description": "The number of days within the past 90 days when the account that will be debited had a negative end-of-day available balance",
              "contentEncoding": "int32"
            },
            "p90_eod_balance_30d": {
              "type": [
                "number",
                "null"
              ],
              "description": "The 90th percentile of the end-of-day available balance over the past 30 days of the account that will be debited"
            },
            "p90_eod_balance_60d": {
              "type": [
                "number",
                "null"
              ],
              "description": "The 90th percentile of the end-of-day available balance over the past 60 days of the account that will be debited"
            },
            "p90_eod_balance_90d": {
              "type": [
                "number",
                "null"
              ],
              "description": "The 90th percentile of the end-of-day available balance over the past 90 days of the account that will be debited"
            },
            "p10_eod_balance_30d": {
              "type": [
                "number",
                "null"
              ],
              "description": "The 10th percentile of the end-of-day available balance over the past 30 days of the account that will be debited"
            },
            "p10_eod_balance_60d": {
              "type": [
                "number",
                "null"
              ],
              "description": "The 10th percentile of the end-of-day available balance over the past 60 days of the account that will be debited"
            },
            "p10_eod_balance_90d": {
              "type": [
                "number",
                "null"
              ],
              "description": "The 10th percentile of the end-of-day available balance over the past 90 days of the account that will be debited"
            },
            "available_balance": {
              "type": [
                "number",
                "null"
              ],
              "description": "Available balance, as of the `balance_last_updated` time. The available balance is the current balance less any outstanding holds or debits that have not yet posted to the account."
            },
            "current_balance": {
              "type": [
                "number",
                "null"
              ],
              "description": "Current balance, as of the `balance_last_updated` time. The current balance is the total amount of funds in the account."
            },
            "balance_last_updated": {
              "type": [
                "string",
                "null"
              ],
              "description": "Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDTHH:mm:ssZ) indicating the last time that the balance for the given account has been updated.",
              "contentEncoding": "date-time"
            },
            "phone_change_count_28d": {
              "type": [
                "integer",
                "null"
              ],
              "description": "The number of times the account's phone numbers on file have changed over the past 28 days",
              "contentEncoding": "int32"
            },
            "phone_change_count_90d": {
              "type": [
                "integer",
                "null"
              ],
              "description": "The number of times the account's phone numbers on file have changed over the past 90 days",
              "contentEncoding": "int32"
            },
            "email_change_count_28d": {
              "type": [
                "integer",
                "null"
              ],
              "description": "The number of times the account's email addresses on file have changed over the past 28 days",
              "contentEncoding": "int32"
            },
            "email_change_count_90d": {
              "type": [
                "integer",
                "null"
              ],
              "description": "The number of times the account's email addresses on file have changed over the past 90 days",
              "contentEncoding": "int32"
            },
            "address_change_count_28d": {
              "type": [
                "integer",
                "null"
              ],
              "description": "The number of times the account's addresses on file have changed over the past 28 days",
              "contentEncoding": "int32"
            },
            "address_change_count_90d": {
              "type": [
                "integer",
                "null"
              ],
              "description": "The number of times the account's addresses on file have changed over the past 90 days",
              "contentEncoding": "int32"
            }
          },
          "description": "The core attributes object contains additional data that can be used to assess the ACH return risk. Examples of data include:\n\n`days_since_first_plaid_connection`: The number of days since the first time the Item was connected to an application via Plaid\n`plaid_connections_count_7d`: The number of times the Item has been connected to applications via Plaid over the past 7 days\n`plaid_connections_count_30d`: The number of times the Item has been connected to applications via Plaid over the past 30 days\n`total_plaid_connections_count`: The number of times the Item has been connected to applications via Plaid\n`is_savings_or_money_market_account`: Indicates whether the ACH transaction funding account is a savings/money market account\n\nFor the full list and detailed documentation of core attributes available, or to request that core attributes not be returned, contact Sales or your Plaid account manager"
        },
        "SignalDecisionReportRequest": {
          "title": "SignalDecisionReportRequest",
          "required": [
            "client_transaction_id",
            "initiated"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "client_transaction_id": {
              "maxLength": 36,
              "minLength": 1,
              "type": "string",
              "description": "Must be the same as the `client_transaction_id` supplied when calling `/signal/evaluate`"
            },
            "initiated": {
              "type": "boolean",
              "description": "`true` if the ACH transaction was initiated, `false` otherwise."
            },
            "days_funds_on_hold": {
              "minimum": 0.0,
              "type": [
                "integer",
                "null"
              ],
              "description": "The actual number of days (hold time) since the ACH debit transaction that you wait before making funds available to your customers. The holding time could affect the ACH return rate. For example, use 0 if you make funds available to your customers instantly or the same day following the debit transaction, or 1 if you make funds available the next day following the debit initialization.",
              "contentEncoding": "int32"
            }
          },
          "description": "SignalDecisionReportRequest defines the request schema for `/signal/decision/report`"
        },
        "SignalDecisionReportResponse": {
          "title": "SignalDecisionReportResponse",
          "required": [
            "request_id"
          ],
          "type": "object",
          "properties": {
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "SignalDecisionReportResponse defines the response schema for `/signal/decision/report`"
        },
        "SignalReturnReportRequest": {
          "title": "SignalReturnReportRequest",
          "required": [
            "client_transaction_id",
            "return_code"
          ],
          "type": "object",
          "properties": {
            "client_id": {
              "type": "string",
              "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
              "default": "5fd43aad1186c30013d6f3e2"
            },
            "secret": {
              "type": "string",
              "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."
            },
            "client_transaction_id": {
              "maxLength": 36,
              "minLength": 1,
              "type": "string",
              "description": "Must be the same as the `client_transaction_id` supplied when calling `/signal/evaluate`"
            },
            "return_code": {
              "type": "string",
              "description": "Must be a valid ACH return code (e.g. \"R01\")"
            }
          },
          "description": "SignalReturnReportRequest defines the request schema for `/signal/return/report`"
        },
        "SignalReturnReportResponse": {
          "title": "SignalReturnReportResponse",
          "required": [
            "request_id"
          ],
          "type": "object",
          "properties": {
            "request_id": {
              "type": "string",
              "description": "A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
            }
          },
          "description": "SignalReturnReportResponse defines the response schema for `/signal/return/report`"
        },
        "Credit": {
          "title": "Credit",
          "type": "object",
          "properties": {
            "account_subtypes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccountSubtype"
              },
              "description": "An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#accounts-schema)."
            }
          },
          "description": "A filter to apply to `credit`-type accounts"
        },
        "Depository": {
          "title": "Depository",
          "type": "object",
          "properties": {
            "account_subtypes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccountSubtype"
              },
              "description": "An array of account subtypes to display in Link. If not specified, all account subtypes will be shown. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#accounts-schema)."
            }
          },
          "description": "A filter to apply to `depository`-type accounts"
        },
        "ErrorType": {
          "title": "ErrorType",
          "enum": [
            "INVALID_REQUEST",
            "INVALID_RESULT",
            "INVALID_INPUT",
            "INSTITUTION_ERROR",
            "RATE_LIMIT_EXCEEDED",
            "API_ERROR",
            "ITEM_ERROR",
            "ASSET_REPORT_ERROR",
            "RECAPTCHA_ERROR",
            "OAUTH_ERROR",
            "PAYMENT_ERROR",
            "BANK_TRANSFER_ERROR",
            "INCOME_VERIFICATION_ERROR"
          ],
          "type": "string",
          "description": "A broad categorization of the error. Safe for programatic use.",
          "examples": [
            "INVALID_REQUEST"
          ]
        },
        "PaymentChannel": {
          "title": "PaymentChannel",
          "enum": [
            "online",
            "in store",
            "other"
          ],
          "type": "string",
          "description": "The channel used to make a payment.\n`online:` transactions that took place online.\n\n`in store:` transactions that were made at a physical location.\n\n`other:` transactions that relate to banks, e.g. fees or deposits.\n\nThis field replaces the `transaction_type` field.",
          "examples": [
            "online"
          ]
        },
        "PersonalFinanceCategory2": {
          "title": "PersonalFinanceCategory2",
          "required": [
            "primary",
            "detailed"
          ],
          "type": "object",
          "properties": {
            "primary": {
              "type": "string",
              "description": "A high level category that communicates the broad category of the transaction."
            },
            "detailed": {
              "type": "string",
              "description": "Provides additional granularity to the primary categorization."
            }
          }
        },
        "Processor": {
          "title": "Processor",
          "enum": [
            "achq",
            "alpaca",
            "astra",
            "check",
            "checkbook",
            "circle",
            "drivewealth",
            "dwolla",
            "galileo",
            "lithic",
            "modern_treasury",
            "moov",
            "ocrolus",
            "prime_trust",
            "rize",
            "sila_money",
            "svb_api",
            "treasury_prime",
            "unit",
            "vesta",
            "vopay",
            "wyre"
          ],
          "type": "string",
          "description": "The processor you are integrating with.",
          "examples": [
            "achq"
          ]
        },
        "RefreshInterval": {
          "title": "RefreshInterval",
          "enum": [
            "NORMAL",
            "DELAYED",
            "STOPPED"
          ],
          "type": "string",
          "description": "The `refresh_interval` may be `DELAYED` or `STOPPED` even when the success rate is high. This value is only returned for Transactions status breakdowns.",
          "examples": [
            "NORMAL"
          ]
        },
        "Status": {
          "title": "Status",
          "enum": [
            "INVESTIGATING",
            "IDENTIFIED",
            "SCHEDULED",
            "RESOLVED",
            "UNKNOWN"
          ],
          "type": "string",
          "description": "The status of the incident.",
          "examples": [
            "INVESTIGATING"
          ]
        },
        "Type": {
          "title": "Type",
          "enum": [
            "home",
            "work",
            "office",
            "mobile",
            "mobile1",
            "other"
          ],
          "type": "string",
          "description": "The type of phone number.",
          "examples": [
            "home"
          ]
        },
        "Type1": {
          "title": "Type1",
          "enum": [
            "primary",
            "secondary",
            "other"
          ],
          "type": "string",
          "description": "The type of email account as described by the financial institution.",
          "examples": [
            "primary"
          ]
        },
        "UpdateType": {
          "title": "UpdateType",
          "enum": [
            "background",
            "user_present_required"
          ],
          "type": "string",
          "description": "Indicates whether an Item requires user interaction to be updated, which can be the case for Items with some forms of two-factor authentication.\n\n`background` - Item can be updated in the background\n\n`user_present_required` - Item requires user interaction to be updated",
          "examples": [
            "background"
          ]
        },
        "VerificationStatus": {
          "title": "VerificationStatus",
          "enum": [
            "automatically_verified",
            "pending_automatic_verification",
            "pending_manual_verification",
            "manually_verified",
            "verification_expired",
            "verification_failed"
          ],
          "type": "string",
          "description": "The current verification status of an Auth Item initiated through Automated or Manual micro-deposits.  Returned for Auth Items only.\n\n`pending_automatic_verification`: The Item is pending automatic verification\n\n`pending_manual_verification`: The Item is pending manual micro-deposit verification. Items remain in this state until the user successfully verifies the two amounts.\n\n`automatically_verified`: The Item has successfully been automatically verified\t\n\n`manually_verified`: The Item has successfully been manually verified\n\n`verification_expired`: Plaid was unable to automatically verify the deposit within 7 calendar days and will no longer attempt to validate the Item. Users may retry by submitting their information again through Link.\n\n`verification_failed`: The Item failed manual micro-deposit verification because the user exhausted all 3 verification attempts. Users may retry by submitting their information again through Link.",
          "examples": [
            "automatically_verified"
          ]
        }
      },
      "securitySchemes": {
        "PLAID-CLIENT-ID": {
          "type": "apiKey",
          "name": "PLAID-CLIENT-ID",
          "in": "header"
        },
        "PLAID-SECRET": {
          "type": "apiKey",
          "name": "PLAID-SECRET",
          "in": "header"
        },
        "Plaid-Version": {
          "type": "apiKey",
          "name": "Plaid-Version",
          "in": "header"
        }
      }
    },
    "security": [
      {
        "PLAID-CLIENT-ID": [],
        "PLAID-SECRET": [],
        "Plaid-Version": []
      }
    ],
    "tags": [
      {
        "name": "plaid",
        "description": "Plaid's API enables people to securely and seamlessly connect their bank accounts to GameFi"
      },
      {
        "name": "token",
        "description": "Obtaining and managing Plaid tokens from Link"
      },
      {
        "name": "item",
        "description": "Retrieving and deleting Plaid Items"
      },
      {
        "name": "processor",
        "description": "Invoke endpoints to integrate with Plaid partners"
      },
      {
        "name": "accounts",
        "description": "Retrieving account information from Plaid and seeing all possible account types and subtypes"
      },
      {
        "name": "institutions",
        "description": "Fetching data about supported Plaid institutions"
      },
      {
        "name": "auth",
        "description": "Retrieve and verify bank account information with Plaid"
      },
      {
        "name": "identity",
        "description": "Use Plaid to verify users' identities and reduce fraud with the Identity product"
      },
      {
        "name": "transactions",
        "description": "Retrieve up to 24 months of banking transaction data with Plaid"
      },
      {
        "name": "categories",
        "description": "Get detailed information on transaction categories from Plaid"
      },
      {
        "name": "signal",
        "description": "Predict and mitigate risk using Plaid's analysis models"
      }
    ]
  }